[{"path":[]},{"path":"/articles/elastic-net.html","id":"understanding-the-effect-of-the-elastic-nets-alpha-parameter","dir":"Articles","previous_headings":"Main simulation","what":"Understanding the effect of the elastic net’s \\(\\alpha\\) parameter","title":"The Elastic Net with the Simulator","text":"begin simulation showing best-case performance elastic net several values \\(\\alpha\\). code, consider sequence models vary correlation rho among features. model, fit sequence elastic net methods (varying tuning parameter \\(\\alpha\\)). method, compute best-case mean-squared error. best-case, mean \\(\\min_{\\lambda\\ge0}\\frac1{p}\\|\\hat\\beta_{\\lambda,\\alpha}-\\beta\\|_2^2\\), imagines oracle-like ability choose best \\(\\lambda\\) minimizing MSE. provide code problem-specific components. use R package glmnet fit elastic net. distinctive feature particular vignette list methods list_of_elastic_nets created. shown Methods section.  first plot shows MSE versus sparsity level method (parameterized \\(\\lambda\\)). expected, see \\(\\alpha=1\\) (pure ridge regression), sparsity. see performance methods \\(\\alpha<1\\) degrades correlation among features increases, especially lot features included fitted model. informative look height minimum curves varies \\(\\rho\\).  see correlation features low, methods \\(\\ell_1\\) penalty better ridge regression. However, features become increasingly correlated, pure ridge penalty becomes better. course, none methods well high correlation regime (reminiscent bet sparsity principle). side note: simulator automatically records computing time method additional metric:","code":"library(simulator) name_of_simulation <- \"elastic-net\" sim <- new_simulation(name_of_simulation, \"Elastic Nets\") %>%   generate_model(make_sparse_linear_model_with_corr_design,                  n = 100, p = 50, snr = 2, k = 10,                  rho = as.list(seq(0, 0.8, length = 6)),                  vary_along = \"rho\") %>%   simulate_from_model(nsim = 3, index = 1:4) %>%   run_method(list_of_elastic_nets,              parallel = list(socket_names = 2, libraries = \"glmnet\")) %>%   evaluate(list(sqr_err, nnz, best_sqr_err)) plot_evals(sim, \"nnz\", \"sqr_err\") plot_eval_by(sim, \"best_sqr_err\", varying = \"rho\", include_zero = TRUE) plot_eval(sim, \"time\", include_zero = TRUE)"},{"path":"/articles/elastic-net.html","id":"results-for-cross-validated-elastic-net","dir":"Articles","previous_headings":"Main simulation","what":"Results for Cross-Validated Elastic Net","title":"The Elastic Net with the Simulator","text":"might reluctant draw conclusions methods based oracle-like version used (method random draw gets pick best possible \\(\\lambda\\) value). might therefore look performance methods using cross-validation select \\(\\lambda\\). Reassuringly, relative performance methods largely (though see methods’ MSEs higher).","code":"sim_cv <- sim %>% subset_simulation(methods = \"\") %>%   rename(\"elastic-net-cv\") %>%   relabel(\"Elastic Nets with CV\") %>%   run_method(list_of_elastic_nets + cv,              parallel = list(socket_names = 2, libraries = \"glmnet\")) %>%   evaluate(list(sqr_err, nnz)) plot_eval_by(sim_cv, \"sqr_err\", varying = \"rho\", include_zero = TRUE)"},{"path":"/articles/elastic-net.html","id":"components","dir":"Articles","previous_headings":"","what":"Components","title":"The Elastic Net with the Simulator","text":"distinctive component vignette Methods section. Rather directly creating Method object, write function creates Method object. allows us easily create sequence elastic net methods differ setting \\(\\alpha\\) parameter.","code":""},{"path":"/articles/elastic-net.html","id":"models","dir":"Articles","previous_headings":"Components","what":"Models","title":"The Elastic Net with the Simulator","text":"","code":"library(mvtnorm) make_sparse_linear_model_with_corr_design <- function(n, p, k, snr, rho) {   sig <- matrix(rho, p, p)   diag(sig) <- 1   x <- rmvnorm(n, sigma = sig)   beta <- rep(c(1, 0), c(k, p - k))   mu <- as.numeric(x %*% beta)   sigma <- sqrt(sum(mu^2) / (n * snr)) # taking snr = ||mu||^2 / (n * sigma^2)   new_model(name = \"slm\", label = sprintf(\"rho = %s\", rho),             params = list(x = x, beta = beta, mu = mu, sigma = sigma, n = n,                           p = p, k = k),             simulate = function(mu, sigma, nsim) {               y <- mu + sigma * matrix(rnorm(nsim * n), n, nsim)               return(split(y, col(y))) # make each col its own list element             }) }"},{"path":"/articles/elastic-net.html","id":"methods","dir":"Articles","previous_headings":"Components","what":"Methods","title":"The Elastic Net with the Simulator","text":"function make_elastic_net takes value \\(\\alpha\\) creates Method object corresponding elastic net value \\(\\alpha\\). second set simulations, studied cross-validated versions elastic net method. , wrote list_of_elastic_nets + cv. required writing following MethodExtension object cv. vignette lasso writing method extensions.","code":"library(glmnet) make_elastic_net <- function(alpha) {   new_method(name = sprintf(\"en%s\", alpha),              label = sprintf(\"EN(a = %s)\", alpha),              settings = list(alpha = alpha, nlam = 50),              method = function(model, draw, alpha, nlam, lambda = NULL) {                       if (is.null(lambda))                         fit <- glmnet(x = model$x, y = draw, alpha = alpha,                                       nlambda = nlam, intercept = FALSE)                       else                         fit <- glmnet(x = model$x, y = draw, alpha = alpha,                                       lambda = lambda, intercept = FALSE)                       list(beta = fit$beta, yhat = model$x %*% fit$beta,                            lambda = fit$lambda, df = fit$df, alpha = alpha)                     }) }  list_of_elastic_nets <- sapply(c(0, 0.5, 1), make_elastic_net) #' Make folds for cross validation #' #' Divides the indices \\code{1:n} into \\code{nfolds} random folds of about the same size. #' #' @param n sample size #' @param nfolds number of folds make_folds <- function(n, nfolds) {   nn <- round(n / nfolds)   sizes <- rep(nn, nfolds)   sizes[nfolds] <- sizes[nfolds] + n - nn * nfolds   b <- c(0, cumsum(sizes))   ii <- sample(n)   folds <- list()   for (i in seq(nfolds))     folds[[i]] <- ii[seq(b[i] + 1, b[i + 1])]   folds }  cv <- new_method_extension(\"cv\", \"cross validated\",                            method_extension = function(model, draw, out,                                                        base_method) {                              nfolds <- 5                              alpha <- base_method@settings$alpha                              err <- matrix(NA, ncol(out$beta), nfolds)                              ii <- make_folds(model$n, nfolds)                              for (i in seq_along(ii)) {                                train <- model                                train@params$x <- model@params$x[-ii[[i]], ]                                train@params$n <- model@params$x[-ii[[i]], ]                                train_draw <- draw[-ii[[i]]]                                 test <- model                                test@params$x <- model@params$x[ii[[i]], ]                                test@params$n <- model@params$x[ii[[i]], ]                                test_draw <- draw[ii[[i]]]                                fit <- base_method@method(model = train,                                                          draw = train_draw,                                                          alpha = alpha,                                                          lambda = out$lambda)                                yhat <- test$x %*% fit$beta                                ll <- seq(ncol(yhat))                                err[ll, i] <- colMeans((yhat - test_draw)^2)                              }                              m <- rowMeans(err)                              se <- apply(err, 1, sd) / sqrt(nfolds)                              imin <- which.min(m)                              ioneserule <- max(which(m <= m[imin] + se[imin]))                              list(err = err, m = m, se = se, imin = imin,                                   ioneserule = ioneserule,                                   beta = out$beta[, imin],                                   yhat = model$x %*% out$beta[, imin],                                   alpha = alpha)                            })"},{"path":"/articles/elastic-net.html","id":"metrics","dir":"Articles","previous_headings":"Components","what":"Metrics","title":"The Elastic Net with the Simulator","text":"","code":"sqr_err <- new_metric(\"sqr_err\", \"squared error\",                   metric = function(model, out) {                     colMeans(as.matrix(out$beta - model$beta)^2)                   })  best_sqr_err <- new_metric(\"best_sqr_err\", \"best squared error\",                       metric = function(model, out) {                         min(colMeans(as.matrix(out$beta - model$beta)^2))                       })  nnz <- new_metric(\"nnz\", \"number of nonzeros\",                   metric = function(model, out) {                     colSums(as.matrix(out$beta) != 0)                   })"},{"path":"/articles/elastic-net.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"The Elastic Net with the Simulator","text":"cite simulator, please use cite package ‘simulator’ publications use: Bien J (2016). “simulator: Engine Streamline Simulations.” Submitted. http://arxiv.org/abs/1607.00021. BibTeX entry LaTeX users @Article{, title = {{simulator}: Engine Streamline Simulations}, author = {Jacob Bien}, year = {2016}, url = {http://arxiv.org/abs/1607.00021}, journal = {Submitted}, }","code":"citation(\"simulator\")"},{"path":"/articles/fdr.html","id":"main-simulation","dir":"Articles","previous_headings":"","what":"Main simulation","title":"Benjamini-Hochberg Procedure with the Simulator","text":"Models section , show code make_correlated_pvalues, function generates model object given parameters \\(n\\) (number hypotheses), \\(\\pi_0\\) (fraction hypotheses null), \\(\\rho\\) (correlation pair test statistics). simulation , fix \\(n=20\\) vary \\(\\pi_0\\) \\(\\rho\\). variable bh_methods defined Methods section corresponds BH procedure four different values \\(q\\). begin looking results \\(\\rho=0\\) (.e., independent tests). comparison Mean false discovery proportion (averaged 100 replicates). appears BH procedure control FDR stated \\(q\\) value. However, also see \\(\\pi_0\\) less 1, tends conservative. Indeed, Benjamini Hochberg show FDR BH exceed \\(\\pi_0q\\).","code":"library(simulator) name_of_simulation <- \"fdr\" sim <- new_simulation(name = name_of_simulation,                       label = \"False Discovery Rate\") %>%   generate_model(make_correlated_pvalues, seed = 123,                  n = 20,                  pi0 = list(0.8, 1),                  rho = list(-0.01, 0, 0.1, 0.9),                  vary_along = c(\"pi0\", \"rho\")) %>%   simulate_from_model(nsim = 25, index = 1:4) %>%   run_method(bh_methods, parallel = list(socket_names = 2)) %>%   evaluate(list(fdp, nd)) sim %>%    subset_simulation(rho == 0) %>%    tabulate_eval(metric_name = \"fdp\", output_type = \"html\",                  format_args = list(digits = 1, nsmall = 2))"},{"path":"/articles/fdr.html","id":"adding-to-a-simulation","dir":"Articles","previous_headings":"","what":"Adding to a simulation","title":"Benjamini-Hochberg Procedure with the Simulator","text":"might like increase number simulations. Suppose return simulation several days later wish double number random draws used. code, 100 draws, simulated 4 chunks 25 draws . simulator allows us add simulation without requiring us re-run parts simulation already run. closed R session without saving image[^]: sake reproducibility, like always start fresh workspace, can sure functions aren’t calling global variable forgotten ), can open new one directory files directory . start loading sim, Simulation object (containing necessary pointers saved files). Loading sim fast loads file locations, files . simply adding 4 chunks, index=5:8. distinct value index corresponds separate random number generator stream. convenient means rely state RNG completing one chunk start next one. can look table. comparison Mean false discovery proportion (averaged 200 replicates).","code":"sim <- load_simulation(\"fdr\") sim <- sim %>%   simulate_from_model(nsim = 25, index = 5:8) %>%   run_method(bh_methods, parallel = list(socket_names = 2)) %>%   evaluate(list(fdp, nd)) sim %>%    subset_simulation(rho == 0) %>%    tabulate_eval(metric_name = \"fdp\", output_type = \"html\",                  format_args = list(digits = 1, nsmall = 2))"},{"path":"/articles/fdr.html","id":"some-plots","dir":"Articles","previous_headings":"Adding to a simulation","what":"Some plots","title":"Benjamini-Hochberg Procedure with the Simulator","text":"FDR average false discovery proportion (FDP). can look raw values (200 method-model pair).  \\(\\pi_0=1\\), see FDP either 0 1. make number discoveries, false (make discoveries, FDP=0). now investigate effect \\(\\rho\\), correlation test statistics. now fix \\(\\pi_0=0.8\\) look plots vary \\(\\rho\\).  Since \\(\\rho\\) numeric, might informative look FDR function \\(\\rho\\).  see procedure becomes conservative dependence increases, still control FDR (shown positive dependence Benjamini Yekutieli, 2001). Looking \\(\\pi_0=1\\), like check whether negative \\(\\rho\\) procedure anti-conservative.","code":"sim %>%    subset_simulation(rho == 0) %>%  plot_eval(metric_name = \"fdp\") sim %>%    subset_simulation(pi0 == 0.8) %>%  plot_eval(metric_name = \"fdp\", varying = \"rho\") sim %>%    subset_simulation(pi0 == 0.8) %>%  plot_eval_by(metric_name = \"fdp\", varying = \"rho\") sim %>%    subset_simulation(pi0 == 1) %>%  plot_eval_by(metric_name = \"fdp\", varying = \"rho\")"},{"path":"/articles/fdr.html","id":"creating-a-simulation-based-on-a-preexisting-one","dir":"Articles","previous_headings":"","what":"Creating a simulation based on a preexisting one","title":"Benjamini-Hochberg Procedure with the Simulator","text":"investigate particular question greater depth, might create new simulation object based previous one. ’d like increase number random draws particular setting, don’t care others. remake table (basis 500 random draws) check anti-conservativeness. comparison Mean false discovery proportion (averaged 500 replicates). Observe point, sim sim2 two separate simulation objects refer common simulation results. example, Model Draws objects . model draws (likewise output evals) called simulation object, load appropriate files referenced Simulation object. models m m2 identical (likewise d d2) Simulation objects refer saved files. Thus, multiple simulation objects lead copies (potentially large) results files made. Instead, references duplicated.","code":"sim2 <- subset_simulation(sim, pi0 == 1 & rho == -0.01) %>%   rename(\"fdr-negdep\") %>%   relabel(\"BH Procedure under negative dependence\") %>%   simulate_from_model(nsim = 25, index = 9:20) %>%   run_method(bh_methods, parallel = list(socket_names = 2)) %>%   evaluate(list(fdp, nd)) tabulate_eval(sim2, metric_name = \"fdp\", output_type = \"html\",                  format_args = list(digits = 1, nsmall = 2)) m <- model(sim, pi0 == 1 & rho == -0.01) m2 <- model(sim2) all.equal(m, m2) ## [1] TRUE d <- draws(sim, pi0 == 1 & rho == -0.01) d2 <- draws(sim2, index = 1:8) all.equal(d, d2) ## [1] TRUE"},{"path":[]},{"path":"/articles/fdr.html","id":"models","dir":"Articles","previous_headings":"Components","what":"Models","title":"Benjamini-Hochberg Procedure with the Simulator","text":"","code":"library(mvtnorm) make_correlated_pvalues <- function(n, pi0, rho) {   # Gaussian copula model...   #   # n pvalues, the first n*pi0 of which are null, coming from a multivariate   # normal with all correlations rho.   sigma <- matrix(rho, n, n)   diag(sigma) <- 1   n0 <- round(n * pi0)   delta <- 2 # size of signal   mu <- rep(c(0, delta), c(n0, n - n0)) # n0 are null   new_model(name = \"correlated-pvalues\",             label = sprintf(\"pi0 = %s, rho = %s\", pi0, rho),             params = list(n = n, rho = rho, sigma = sigma,                           pi0 = pi0, mu = mu, delta = delta,                           nonnull = which(mu != 0)),             simulate = function(n, mu, sigma, nsim) {               # this function must return a list of length nsim               x <- rmvnorm(nsim, mean = mu, sigma = sigma)               pvals <- 1 - pnorm(x)               return(split(pvals, row(pvals))) # make each row its own list element             }) }"},{"path":"/articles/fdr.html","id":"methods","dir":"Articles","previous_headings":"Components","what":"Methods","title":"Benjamini-Hochberg Procedure with the Simulator","text":"","code":"make_bh <- function(q) {   # q is the desired level of control for the FDR   new_method(name = paste0(\"bh\", q),              label = sprintf(\"BH (q = %s)\", q),              settings = list(q = q),              method = function(model, draw, q) {                p <- sort(draw)                cutline <- seq(model$n) * q / model$n                threshold <- max(p[p <= cutline], 0)                list(rejected = which(draw <= threshold))              }) }  qvalues <- c(0.05, 0.1, 0.2) bh_methods <- sapply(qvalues, make_bh)"},{"path":"/articles/fdr.html","id":"metrics","dir":"Articles","previous_headings":"Components","what":"Metrics","title":"Benjamini-Hochberg Procedure with the Simulator","text":"","code":"fdp <- new_metric(name = \"fdp\",                   label = \"false discovery proportion\",                   metric = function(model, out) {                     fp <- setdiff(out$rejected, model$nonnull)                     nd <- max(length(out$rejected), 1)                     return(length(fp) / nd)                     })  nd <- new_metric(name = \"nd\",                  label = \"number of discoveries\",                  metric = function(model, out) length(out$rejected))"},{"path":"/articles/fdr.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Benjamini-Hochberg Procedure with the Simulator","text":"cite simulator, please use cite package ‘simulator’ publications use: Bien J (2016). “simulator: Engine Streamline Simulations.” Submitted. http://arxiv.org/abs/1607.00021. BibTeX entry LaTeX users @Article{, title = {{simulator}: Engine Streamline Simulations}, author = {Jacob Bien}, year = {2016}, url = {http://arxiv.org/abs/1607.00021}, journal = {Submitted}, }","code":"citation(\"simulator\")"},{"path":"/articles/james-stein.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"James-Stein with the Simulator","text":"Suppose observe \\(Y\\sim N_p(\\theta, I_p)\\) wish estimate \\(\\theta\\). MLE, \\(\\hat\\theta_{MLE}=Y\\), seem like best estimator \\(\\theta\\). However, James Stein showed \\[ \\hat\\theta_{JS}=\\left(1-\\frac{p-2}{\\|Y\\|^2}\\right)Y \\] dominates MLE \\(p>2\\) terms squared-error loss, \\(\\|\\hat\\theta - \\theta\\|^2\\). can see simulation.","code":""},{"path":"/articles/james-stein.html","id":"using-the-simulator","dir":"Articles","previous_headings":"","what":"Using the simulator","title":"James-Stein with the Simulator","text":"simulation requires little code might just put one file, maintaining standard simulator file structure beneficial consistency across projects. look back project several years ago, ’s always helpful look files main.R, model_functions.R, method_functions.R, evals_functions.R. file main.R contains code actually run carry simulations. three files define individual ingredients needed simulation.","code":""},{"path":"/articles/james-stein.html","id":"define-the-models","dir":"Articles","previous_headings":"Using the simulator","what":"Define the model(s)","title":"James-Stein with the Simulator","text":"model_functions.R, create function generate model \\(p\\) \\(\\|\\theta\\|_2\\) parameters passed time simulation. (Without loss generality, take \\(\\theta=\\|\\theta\\|_2 e_1\\).)","code":"library(simulator) make_normal_model <- function(theta_norm, p) {   new_model(name = \"norm\",             label = sprintf(\"p = %s, theta_norm = %s\", p, theta_norm),             params = list(theta_norm = theta_norm, p = p,                           theta = c(theta_norm, rep(0, p - 1))),             simulate = function(theta, p, nsim) {               Y <- theta + matrix(rnorm(nsim * p), p, nsim)               return(split(Y, col(Y))) # make each col its own list element             }) }"},{"path":"/articles/james-stein.html","id":"define-the-methods","dir":"Articles","previous_headings":"Using the simulator","what":"Define the methods","title":"James-Stein with the Simulator","text":"method_functions.R, create two functions, one method:","code":"mle <- new_method(name = \"mle\", label = \"MLE\",                   method = function(model, draw) return(list(est = draw)))  js <- new_method(name = \"jse\", label = \"James-Stein\",                  method = function(model, draw) {                    l2 <- sum(draw^2)                    return(list(est = (1 - (model$p - 2) / l2) * draw))                  })"},{"path":"/articles/james-stein.html","id":"define-the-metrics-of-interest","dir":"Articles","previous_headings":"Using the simulator","what":"Define the metric(s) of interest","title":"James-Stein with the Simulator","text":"eval_functions.R, create function squared-error metric","code":"sqr_err <- new_metric(name = \"sqrerr\", label = \"Squared Error Loss\",                       metric = function(model, out) {                         mean((out$est - model$theta)^2)                       })"},{"path":"/articles/james-stein.html","id":"the-main-simulation-putting-the-components-together","dir":"Articles","previous_headings":"Using the simulator","what":"The main simulation: putting the components together","title":"James-Stein with the Simulator","text":"Finally, ready write main.R. Let’s start simulating two models, one \\(p=2\\) one \\(p=6\\). output messages inform us files created. generate_model call leads creation two models. theta_norm p passed via generate_model. However, use vary_along = \"p\" indicates simulator wish generate separate model entry list p = list(2, 6). first two lines output indicate models created saved file (directories named based names corresponding model objects). Next, simulate_from_model function takes models simulates 20 random draws model. Recall objects class Model specify data generated . third fourth lines output tells us long took files saved. run_method function takes two methods interest (MLE James-Stein estimator) runs random draw. Lines 5-8 tell us long took. Finally, function evaluate takes metric (generally list metrics) interest applies outputs (methods, draws, across models). Lines 9-14 report metrics computed. (Note method’s timing information included default.) returned object, sim1, Simulation object. contains references saved files generated. object sim1 automatically saved, close reopen R session, simply type sim1 <- load_simulation(\"js-v-mle\") reload .","code":"sim1 <- new_simulation(name = \"js-v-mle\",                        label = \"Investigating the James-Stein Estimator\") %>%   generate_model(make_normal_model, theta_norm = 1, p = list(2, 6),                  vary_along = \"p\", seed = 123) %>%   simulate_from_model(nsim = 20) %>%   run_method(list(js, mle)) %>%   evaluate(sqr_err) ## ..Created model and saved in norm/p_2/theta_norm_1/model.Rdata ## ..Created model and saved in norm/p_6/theta_norm_1/model.Rdata ## ..Simulated 20 draws in 0 sec and saved in norm/p_2/theta_norm_1/r1.Rdata ## ..Simulated 20 draws in 0 sec and saved in norm/p_6/theta_norm_1/r1.Rdata ## ..Performed James-Stein in 0 seconds (on average over 20 sims) ## ..Performed MLE in 0 seconds (on average over 20 sims) ## ..Performed James-Stein in 0 seconds (on average over 20 sims) ## ..Performed MLE in 0 seconds (on average over 20 sims) ## ..Evaluated James-Stein in terms of Squared Error Loss, Computing time (sec) ## ..Evaluated MLE in terms of Squared Error Loss, Computing time (sec) ## ..Evaluated James-Stein in terms of Squared Error Loss, Computing time (sec) ## ..Evaluated MLE in terms of Squared Error Loss, Computing time (sec)"},{"path":"/articles/james-stein.html","id":"a-look-at-the-results","dir":"Articles","previous_headings":"","what":"A look at the results","title":"James-Stein with the Simulator","text":"now ready examine results simulation.  expected, James-Stein estimator better MLE \\(p=6\\), whereas \\(p=2\\) perform (case since fact identical!). see individual plots’ titles come model’s label. Likewise, boxplot labeled corresponding method’s label. y-axis labeled label metric used. simulator, label part corresponding simulation component used needed. example, instead plot wished view table, following: comparison Mean Squared Error Loss (averaged 20 replicates). document latex, instead use output_type=\"latex\". Since reporting many digits meaningful, may wish adjust number digits shown: comparison Mean Squared Error Loss (averaged 20 replicates).","code":"plot_eval(sim1, metric_name = \"sqrerr\") tabulate_eval(sim1, metric_name = \"sqrerr\", output_type = \"markdown\") tabulate_eval(sim1, metric_name = \"sqrerr\", output_type = \"markdown\",               format_args = list(nsmall = 1, digits = 1))"},{"path":[]},{"path":"/articles/james-stein.html","id":"plotting-a-metric-as-a-function-of-a-numerical-model-parameter","dir":"Articles","previous_headings":"Demonstration of additional simulator features","what":"Plotting a metric as a function of a numerical model parameter","title":"James-Stein with the Simulator","text":"Rather looking just two models, might wish generate sequence models, indexed \\(p\\). display boxplots table …  comparison Mean Squared Error Loss (averaged 20 replicates). …however, since p numerical value, might informative plot p x-axis.  can also use base plot functions rather ggplot2:","code":"sim2 <- new_simulation(name = \"js-v-mle2\",                        label = \"Investigating James-Stein Estimator\") %>%   generate_model(make_normal_model, vary_along = \"p\",                  theta_norm = 1, p = as.list(seq(1, 30, by = 5))) %>%   simulate_from_model(nsim = 20) %>%   run_method(list(js, mle)) %>%   evaluate(sqr_err) plot_eval(sim2, metric_name = \"sqrerr\") tabulate_eval(sim2, metric_name = \"sqrerr\", output_type = \"markdown\",               format_args = list(nsmall = 2, digits = 1)) plot_eval_by(sim2, metric_name = \"sqrerr\", varying = \"p\") plot_eval_by(sim2, metric_name = \"sqrerr\", varying = \"p\", use_ggplot2 = FALSE)"},{"path":"/articles/james-stein.html","id":"easy-access-to-results-of-simulation","dir":"Articles","previous_headings":"Demonstration of additional simulator features","what":"Easy access to results of simulation","title":"James-Stein with the Simulator","text":"functions used many options allowing, example, plots tables customized many ways. intention one typically wishes display can easily done simulator functions. However, cases one wishes work directly generated results, one may output evaluated metrics data.frame: One can also extract specific slices evaluated metrics. example:","code":"df <- as.data.frame(evals(sim2)) head(df) ##                   Model Method Draw    sqrerr time ## 1 norm/p_1/theta_norm_1    jse r1.1  1.648343    0 ## 2 norm/p_1/theta_norm_1    jse r1.2  2.015828    0 ## 3 norm/p_1/theta_norm_1    jse r1.3 43.065347    0 ## 4 norm/p_1/theta_norm_1    jse r1.4  3.497164    0 ## 5 norm/p_1/theta_norm_1    jse r1.5  2.918979    0 ## 6 norm/p_1/theta_norm_1    jse r1.6  1.130775    0 evals(sim2, p == 6, methods = \"jse\") %>% as.data.frame %>% head ##                   Model Method Draw    sqrerr time ## 1 norm/p_6/theta_norm_1    jse r1.1 0.1919394    0 ## 2 norm/p_6/theta_norm_1    jse r1.2 1.2470374    0 ## 3 norm/p_6/theta_norm_1    jse r1.3 0.1022489    0 ## 4 norm/p_6/theta_norm_1    jse r1.4 0.5981796    0 ## 5 norm/p_6/theta_norm_1    jse r1.5 0.1977684    0 ## 6 norm/p_6/theta_norm_1    jse r1.6 0.2248202    0"},{"path":"/articles/james-stein.html","id":"varying-along-more-than-one-parameter","dir":"Articles","previous_headings":"Demonstration of additional simulator features","what":"Varying along more than one parameter","title":"James-Stein with the Simulator","text":"can also vary models across one parameter passing multiple variable names vary_along. example, suppose wish vary dimension p norm mean vector theta_norm. following generates simulation 30 models, corresponding pairs 3 values p 10 values theta_norm. 30 models, generate 20 simulations run two methods evaluate one metric: run simulations, can make plots vary \\(\\|\\theta\\|_2\\) fixed values \\(p\\). , use subset_simulation function, allows us select (30 models) ones meeting certain criterion \\(p\\) certain value. (Although relevant , also able subset simulations index method.)  see MLE’s risk constant whereas James-Stein risk depend \\(\\|\\theta\\|_2\\) greatest improvement occurring \\(\\|\\theta\\|_2\\) small. Suppose wish look different “slice” simulation \\(p=1\\).  Clearly, something strange happening . investigate, start looking raw squared-error values (whereas default plot_eval_by shows sample mean random draws).  notice huge outlier two values theta_norm. Let’s use opportunity show debugging works simulator (certainly common task writing simulations!).","code":"sim3 <- new_simulation(name = \"js-v-mle3\",                        label = \"Investigating the James-Stein Estimator\") %>%   generate_model(make_normal_model, vary_along = c(\"p\", \"theta_norm\"),                  theta_norm = as.list(round(seq(0, 5, length = 10), 2)),                  p = as.list(seq(1, 30, by = 10))) %>%   simulate_from_model(nsim = 20) %>%   run_method(list(js, mle)) %>%   evaluate(sqr_err) subset_simulation(sim3, p == 11) %>%    plot_eval_by(metric_name = \"sqrerr\", varying = \"theta_norm\", main = \"p = 11\") subset_simulation(sim3, p == 1) %>%    plot_eval_by(metric_name = \"sqrerr\", varying = \"theta_norm\", main = \"p = 1\") subset_simulation(sim3, p == 1) %>%    plot_eval_by(metric_name = \"sqrerr\", varying = \"theta_norm\",                 type = \"raw\", main = \"p = 1\") ## `geom_smooth()` using method = 'loess' and formula = 'y ~ x' ## Warning: Removed 19 rows containing missing values (`geom_smooth()`)."},{"path":"/articles/james-stein.html","id":"examining-earlier-stages-of-a-simulation","dir":"Articles","previous_headings":"Demonstration of additional simulator features","what":"Examining earlier stages of a simulation","title":"James-Stein with the Simulator","text":"Let’s start looking outlier theta_norm 0. Let’s check \\(\\theta\\) scalar (\\(p=1\\)) equal zero: print model object m, see basic information , including reminder parameters included.1 can use m@params$theta, can write simply: expected, \\(\\theta\\) scalar equal 0. Now, let’s examine \\(Y\\) values drawn: Nothing unusual looking yet. Let’s look directly squared errors computed find simulation realization problematic one. ’ll restrict James-Stein estimator case: see simulation draw r1.14 culprit, squared error 6399.4379981. Let’s look James-Stein output realization. negative. come ? Let’s look \\(Y\\) case: relatively close zero computed get something quite large. course, \\(p=1\\), James-Stein estimator perform shrinkage rather inflates \\(Y\\), something one expect good idea! Now investigated outliers, confident reflect coding error; rather, “real” portrayal performance James-Stein estimator’s performance situation.","code":"m <- model(sim3, p == 1 & theta_norm == 0) m ## Model Component ##  name: norm/p_1/theta_norm_0 ##  label: p = 1, theta_norm = 0 ##  params: theta_norm p theta ##  (Add @params to end of this object to see parameters.) ##  (Add @simulate to end of this object to see how data is simulated.) m$theta ## [1] 0 d <- draws(sim3, p == 1 & theta_norm == 0) d ## Draws Component ##  name: norm/p_1/theta_norm_0 ##  label: (Block 1:) 20 draws from p = 1, theta_norm = 0 ##  (Add @draws to end of this object to see what was simulated.) d@draws[1:4] # this is a list, one per draw of Y.  Look at first 4 elements. ## $r1.1 ## [1] -0.4094454 ##  ## $r1.2 ## [1] 0.8909694 ##  ## $r1.3 ## [1] -0.8653704 ##  ## $r1.4 ## [1] 1.464271 summary(unlist(d@draws)) ##     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  ## -2.23182 -0.76999 -0.11728 -0.05857  0.49413  2.45053 e <- evals(sim3, p == 1 & theta_norm == 0, methods = \"jse\") e ## Evals Component ##  model_name: norm/p_1/theta_norm_0    index: 1 (20 nsim) ##  method_name(s): jse (labeled: James-Stein) ##  metric_name(s): sqrerr, time ##  metric_label(s): Squared Error Loss, Computing time (sec) ##  (Add @evals to end of this object or use as.data.frame to see more.) df <- as.data.frame(e) summary(df$sqrerr) ##     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  ##    4.054    4.263    6.137  356.414   10.503 6399.438 df[which.max(df$sqrerr), ] ##                    Model Method  Draw   sqrerr time ## 14 norm/p_1/theta_norm_0    jse r1.14 6399.438    0 o <- output(sim3, p == 1 & theta_norm == 0, methods = \"jse\") o@out$r1.14 ## $est ## [1] -79.99649 ##  ## $time ##    user  system elapsed  ##       0       0       0 d@draws$r1.14 ## [1] -0.0125025 1-(m$p - 2)/d@draws$r1.14^2 ## [1] 6398.438"},{"path":"/articles/lasso.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"The Lasso with the Simulator","text":"vignette, show simulator can used perform simulations related lasso.","code":""},{"path":"/articles/lasso.html","id":"betting-on-sparsity","dir":"Articles","previous_headings":"","what":"Betting on Sparsity","title":"The Lasso with the Simulator","text":"Elements Statistical Learning, authors describe “bet sparsity” principle suggests one , “Use procedure well sparse problems, since procedure well dense problems.” support idea, compare performance lasso ridge estimators sparse dense situations. demonstrate simulator can used perform simulation study. Observe entire simulation coded less 10 lines code. first line, name simulation (computer-friendly human-readable way); newly created simulation piped1 generate_model, creates sequence sparse linear model objects sparsity level varied 5 80. model objects contain \\(X\\) \\(\\beta\\), function describing generate \\(y\\); piped simulate_from_model, creates 4 draws (, \\(y\\) vectors) model (created 2 chunks size 2, getting random number generator stream get results regardless whether performed parallel sequence); 2 simulation object piped run_method, lasso ridge performed (parallel, across 2 cpus) 64 instances (64=16*4; 16 models 4 draws per model); finally, 4 metrics computed method’s output across instances. intermediate results automatically saved file, simulation object sim contains references saved results. functions model, draws, output, evals can applied sim return various results created . now, interested looking final results simulation, contained evals(sim). function plot_eval_by designed situations wish see metric interest varies model parameter. “bet sparsity” simulation, might curious see varying sparsity level model affects best-achievable mean squared error \\(\\min_\\lambda\\frac1{p}\\|\\hat\\beta_\\lambda-\\beta\\|^2\\) method.  rationale “bet sparsity” principle apparent plot. \\(k\\) low, see large gains performance using lasso compared ridge; \\(k\\) large, ridge better—however, regime, neither method particularly well (relative sense, ridge’s advantage slight). Rather looking just best MSE method, can also examine MSE varies degrees freedom (, unlike \\(\\lambda\\), meaning across different methods). Let’s look particular two models different sparsity levels \\(k\\).","code":"library(simulator) sim <- new_simulation(\"bet-on-sparsity\", \"Bet on sparsity\") %>%   generate_model(make_sparse_linear_model, n = 200, p = 500, snr = 2,                  k = as.list(seq(5, 80, by = 5)),                  vary_along = \"k\") %>%   simulate_from_model(nsim = 2, index = 1:2) %>%   run_method(list(lasso, ridge),              parallel = list(socket_names = 2, libraries = \"glmnet\")) %>%   evaluate(list(sqrerr, nnz, df, best_sqrerr)) plot_eval_by(sim, \"best_sqrerr\", varying = \"k\", main = \"Betting on sparsity\") subset_simulation(sim, k %in% c(20, 80)) %>% plot_evals(\"df\", \"sqrerr\")"},{"path":"/articles/lasso.html","id":"the-relaxed-lasso","dir":"Articles","previous_headings":"","what":"The relaxed lasso","title":"The Lasso with the Simulator","text":"Suppose wish add relaxed lasso comparison. relaxed lasso involves fitting lasso determine set nonzeros performing least squares selected subset variables. describe later section vignette simulator interprets lasso + refit extension lasso method therefore require re-running lasso instead takes already saved output lasso method performs refitting output. Let’s check improvement lasso.  looks like relaxed lasso better small values \\(k\\). can see better looking table first several models low true sparsity level \\(k\\). comparison Mean best squared error (averaged 4 replicates). true sparsity level increases, makes sense performance relaxed lasso degrades since lasso can accommodate larger number features whereas relaxed lasso (since least squares suffers greatly number features nears sample size \\(n\\)). explanation confirmed plotting MSE versus number nonzeros fitted model:  However, true sparsity level larger, see relaxation can backfire.  Since looks like relaxed lasso particularly beneficial situation, let’s return comparison lasso ridge.","code":"sim2 <- sim %>%   subset_simulation(methods = \"lasso\") %>%   rename(\"relaxing-the-lasso\") %>%   relabel(\"Effect of relaxing lasso\") %>%   run_method(methods = lasso + refit) %>%   evaluate(list(sqrerr, nnz, df, best_sqrerr)) plot_eval_by(sim2, \"best_sqrerr\", varying = \"k\") sim2 %>%    subset_simulation(methods = c(\"lasso\", \"lasso_refit\"), subset = 1:3) %>%   tabulate_eval(metric_name = \"best_sqrerr\",                 format_args = list(nsmall = 3, digits = 1),                 output_type = \"markdown\") subset_simulation(sim2, methods = c(\"lasso\", \"lasso_refit\"), subset = 1:3) %>%   plot_evals(\"nnz\", \"sqrerr\") subset_simulation(sim2, methods = c(\"lasso\", \"lasso_refit\"), k == 40) %>%   plot_evals(\"nnz\", \"sqrerr\")"},{"path":"/articles/lasso.html","id":"betting-on-sparsity-with-cross-validation","dir":"Articles","previous_headings":"","what":"Betting on sparsity (with cross-validation)","title":"The Lasso with the Simulator","text":"simulation side-stepped issue tuning parameter selection either looking curves parameterized \\(\\lambda\\) looking “best MSE”, \\(\\min_\\lambda MSE(\\lambda)\\). practice, common use cross-validation select tuning parameter, might practically relevant compare performance lasso ridge cross-validation used select tuning parameters. Let’s create new simulation object model simulated data , two new methods:","code":"sim3 <- sim %>% subset_simulation(methods = \"\") %>%   rename(\"bet-on-sparsity-cv\") %>%   relabel(\"Bet on sparsity (with cross validation)\") %>%   run_method(list(lasso + cv, ridge + cv)) %>%   evaluate(list(sqrerr, nnz)) plot_eval_by(sim3, \"sqrerr\", varying = \"k\", main = \"Betting on sparsity\")"},{"path":"/articles/lasso.html","id":"a-look-at-the-components-of-the-simulations-above","dir":"Articles","previous_headings":"","what":"A look at the components of the simulations above","title":"The Lasso with the Simulator","text":"idea simulator one write problem-specific code performing simulations. Everything else—bookkeeping, saving/loading results, parallelization, handling random number generator streams, plotting, making tables—taken care simulator. look now problem-specific components “plugged ” simulator perform simulations . components simulator organized models, methods, metrics, demonstrated . Although required, stay organized recommend components defined separate files, named model_functions.R, method_functions.R, eval_functions.R.","code":""},{"path":"/articles/lasso.html","id":"the-model","dir":"Articles","previous_headings":"A look at the components of the simulations above","what":"The model","title":"The Lasso with the Simulator","text":"simulate linear model \\[ Y=X\\beta + \\epsilon \\] \\(Y\\\\mathbb R^n\\), \\(\\beta\\\\mathbb R^p\\), \\(\\epsilon\\sim N(0,\\sigma^2I_n)\\). taken \\(X\\) iid \\(N(0,1)\\) entries treat fixed simulation. define Model object, specifies parameters , importantly, describes simulate data. typically put code file named model_functions.R.","code":"make_sparse_linear_model <- function(n, p, k, snr) {   x <- matrix(rnorm(n * p), n, p)   beta <- rep(c(1, 0), c(k, p - k))   mu <- as.numeric(x %*% beta)   sigma <- sqrt(sum(mu^2) / (n * snr)) # taking snr = ||mu||^2 / (n * sigma^2)   new_model(name = \"slm\", label = sprintf(\"n = %s, p = %s, k = %s\", n, p, k),             params = list(x = x, beta = beta, mu = mu, sigma = sigma, n = n,                           p = p, k = k),             simulate = function(mu, sigma, nsim) {               return(lapply(1:nsim, function(i) mu + sigma * rnorm(n)))             }) }"},{"path":"/articles/lasso.html","id":"the-methods","dir":"Articles","previous_headings":"A look at the components of the simulations above","what":"The methods","title":"The Lasso with the Simulator","text":"compare lasso ridge. methods depend tuning parameters, compute sequence solutions. Methods can return different items. However, aspects method used downstream simulation compared across methods common format. Thus beta, yhat, df case format. items used evaluating methods’ performances. typically put code file named method_functions.R.","code":"library(glmnet) lasso <- new_method(\"lasso\", \"Lasso\",                     method = function(model, draw, lambda = NULL) {                       if (is.null(lambda))                         fit <- glmnet(x = model$x, y = draw, nlambda = 50,                                       intercept = FALSE)                       else {                         fit <- glmnet(x = model$x, y = draw, lambda = lambda,                                       intercept = FALSE)                       }                       list(beta = fit$beta, yhat = model$x %*% fit$beta,                            lambda = fit$lambda, df = fit$df)                     })  ridge <- new_method(\"ridge\", \"Ridge\",                     method = function(model, draw, lambda = NULL) {                       sv <- svd(model$x)                       df_fun <- function(lam) {                         # degrees of freedom when tuning param is lam                         sum(sv$d^2 / (sv$d^2 + lam))                       }                       if (is.null(lambda)) {                         nlambda <- 50                         get_lam <- function(target_df) {                           f <- function(lam) df_fun(lam) - target_df                           uniroot(f, c(0, 100 * max(sv$d^2)))$root                         }                         lambda <- sapply(seq(1, nrow(model$x),                                              length = nlambda), get_lam)                       }                       df <- sapply(lambda, df_fun)                       beta <- sapply(lambda, function(r) {                         d <- sv$d / (sv$d^2 + r)                         return(sv$v %*% (d * crossprod(sv$u, draw)))                       })                       list(beta = beta, yhat = model$x %*% beta,                            lambda = lambda, df = df)                     })"},{"path":"/articles/lasso.html","id":"the-metrics","dir":"Articles","previous_headings":"A look at the components of the simulations above","what":"The metrics","title":"The Lasso with the Simulator","text":"compare methods plots tables, usually number “metrics” use. object class Metric specifies go model’s parameters output method return quantity interest. Observe refers list returned methods model refers Model object generated make_sparse_linear_model. $ operator can used get parameters stored Model object. typically put code file named eval_functions.R.","code":"sqrerr <- new_metric(\"sqrerr\", \"squared error\",                   metric = function(model, out) {                     colMeans(as.matrix(out$beta - model$beta)^2)                   })  best_sqrerr <- new_metric(\"best_sqrerr\", \"best squared error\",                       metric = function(model, out) {                         min(colMeans(as.matrix(out$beta - model$beta)^2))                       })  nnz <- new_metric(\"nnz\", \"number of nonzeros\",                   metric = function(model, out) {                     colSums(as.matrix(out$beta) != 0)                   })  df <- new_metric(\"df\", \"degrees of freedom\",                  metric = function(model, out) out$df)"},{"path":"/articles/lasso.html","id":"extensions-of-the-methods","dir":"Articles","previous_headings":"A look at the components of the simulations above","what":"Extensions of the methods","title":"The Lasso with the Simulator","text":"simulations , saw two examples studied methods extended versions methods. relaxed lasso treated completely separate method lasso, wasteful comparison lasso since required us fit lasso twice (calling lasso within relaxed lasso). Instead, created called ExtendedMethod object, behaves like Method object, except allows one use output another method. care relaxing lasso, might directly create ExtendedMethod. However, situations, may wish extend multiple methods fashion. example, perhaps may later wish “relax” lasso another variable selection procedure, SCAD MCP. spirit code reusability, therefore created MethodExtension object called refit. MethodExtension object added Method object generates ExtendedMethod. example relaxed lasso, created MethodExtension called refit takes method’s output performs least squares nonzeros. created MethodExtension, can get relaxed lasso ExtendedMethod simple addition objects: defined different variable selection procedure, say mcp, just easily generated relaxed version, writing new code: example method extension simulations cross-validation. wrote method extension used create extended versions multiple methods. typically put code file named method_functions.R, though file large, may prefer separate file named, perhaps, method_extensions_functions.R.","code":"refit <- new_method_extension(name = \"refit\", label = \"refitted\",                               method_extension = function(model, draw, out,                                                           base_method) {                                 beta <- apply(out$beta, 2, function(b) {                                   ii <- b != 0                                   if (sum(ii) == 0)                                     return(b)                                   xtx <- crossprod(model$x[, ii])                                   # add small ridge in case solution has more                                   # than n nonzeros:                                   diag(xtx) <- diag(xtx) + 1e-4                                   bb <- solve(xtx,                                               crossprod(model$x[, ii], draw))                                   b[ii] <- bb                                   return(b)                                 })                                 return(list(beta = beta,                                             yhat = model$x %*% beta,                                             lambda = out$lambda,                                             df = rep(NA, ncol(beta))))                               }) lasso + refit ## ExtendedMethod Component ##  name: lasso_refit ##  label: Lasso refitted relaxed_mcp <- mcp + refit #' Make folds for cross validation #' #' Divides the indices \\code{1:n} into \\code{nfolds} random folds of about the same size. #' #' @param n sample size #' @param nfolds number of folds make_folds <- function(n, nfolds) {   nn <- round(n / nfolds)   sizes <- rep(nn, nfolds)   sizes[nfolds] <- sizes[nfolds] + n - nn * nfolds   b <- c(0, cumsum(sizes))   ii <- sample(n)   folds <- list()   for (i in seq(nfolds))     folds[[i]] <- ii[seq(b[i] + 1, b[i + 1])]   folds }  cv <- new_method_extension(\"cv\", \"cross validated\",                            method_extension = function(model, draw, out,                                                        base_method) {                              nfolds <- 5                              err <- matrix(NA, ncol(out$beta), nfolds)                              ii <- make_folds(model$n, nfolds)                              for (i in seq_along(ii)) {                                train <- model                                train@params$x <- model@params$x[-ii[[i]], ]                                train@params$n <- nrow(train@params$x)                                train_draw <- draw[-ii[[i]]]                                 test <- model                                test@params$x <- model@params$x[ii[[i]], ]                                test@params$n <- nrow(test@params$x)                                test_draw <- draw[ii[[i]]]                                fit <- base_method@method(model = train,                                                          draw = train_draw,                                                          lambda = out$lambda)                                yhat <- test$x %*% fit$beta                                ll <- seq(ncol(yhat))                                err[ll, i] <- colMeans((yhat - test_draw)^2)                              }                              m <- rowMeans(err)                              se <- apply(err, 1, sd) / sqrt(nfolds)                              imin <- which.min(m)                              ioneserule <- max(which(m <= m[imin] + se[imin]))                              list(err = err, m = m, se = se, imin = imin,                                   ioneserule = ioneserule,                                   beta = out$beta[, imin],                                   yhat = model$x %*% out$beta[, imin])                            })"},{"path":"/articles/lasso.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"The Lasso with the Simulator","text":"vignette demonstrated features simulator parallel computing, writing extensions methods, making basic plots tables. vignettes, additional features demonstrated. example, vignette elastic net demonstrates one can work sequence methods identical except particular setting (\\(\\alpha\\) elastic net).","code":""},{"path":"/articles/simulator.html","id":"starting-from-a-template","dir":"Articles","previous_headings":"","what":"Starting from a template","title":"Getting Started with the Simulator","text":"installing package, open R type. Choose dir path directory (yet exist) want simulation code files stored. practice, \"./sims\" standard choice, \".\" refers directory containing files relevant current project. create command generates skeleton simulation.1 look newly created directory shows several files created. template basic simulation. model_functions.R, write code defines models wish simulate. method_functions.R, add code methods wish compare simulation (note using source library, can keep method_functions.R short point, focusing calling new_method rather putting actual heart algorithms file). eval_functions.R, use new_metric define ways methods evaluated. file main.R contains main entry point simulation. Running code file determines models/methods/metrics computed, etc. Finally, file writeup.Rmd shows results can presented report. document pulls code .R files mentioned , main.R files develop, report remain date. create html file report, run following command R (requires installing package rmarkdown). one using RStudio, one can simply press Knit HTML button.","code":"library(simulator) dir <- \"./sims\" create(dir) ## New simulation template created!  Go to ./sims/main.R to get started. setwd(dir) list.files() ## [1] \"eval_functions.R\"   \"main.R\"             \"method_functions.R\" ## [4] \"model_functions.R\"  \"writeup.Rmd\" rmarkdown::render(\"writeup.Rmd\", \"html_document\")"},{"path":"/articles/simulator.html","id":"typical-workflow","dir":"Articles","previous_headings":"","what":"Typical workflow","title":"Getting Started with the Simulator","text":"typical project, one starts defining model model_functions.R, one two methods method_functions.R, metrics eval_functions.R, one runs code main.R. looking results, one might add additional model method metric. One returns main.R, adds additional lines specifying additional components run well looks results. simplest way look results using plot functions plot_eval, plot_evals plot_evals_by. situations wish investigate results deeply just looking aggregated plots, one can use functions model, draws, output, evals get objects generated course simulation.","code":""},{"path":"/articles/simulator.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next steps","title":"Getting Started with the Simulator","text":"best way get sense use simulator look examples. several vignettes demonstrate simulator can used conduct simulations famous statistical methods. Lasso vignette: Explains basics, including magrittr pipe making plots tables. Also demonstrates advanced features writing method extensions (refitting result lasso performing cross-validation). James-Stein vignette: Shows step specific parts simulation troubleshooting code. Elastic net vignette: Shows can work sequence methods identical except parameter varies Benjamini-Hochberg vignette: Shows can load preexisting simulation add random draws without rerun anything. also shows one can multiple simulation objects point overlapping sets results.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Bien. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bien J (2016). “simulator: Engine Streamline Simulations.” arXiv:1607.00021. https://arxiv.org/abs/1607.00021.","code":"@Article{,   title = {The {simulator}: An Engine to Streamline Simulations},   author = {Jacob Bien},   year = {2016},   url = {https://arxiv.org/abs/1607.00021},   journal = {arXiv:1607.00021}, }"},{"path":"/index.html","id":"the-simulator-","dir":"","previous_headings":"","what":"An Engine for Running Simulations","title":"An Engine for Running Simulations","text":"simulator R package streamlines process performing simulations creating common infrastructure can easily used reused across projects. paper Simulator: Engine Streamline Simulations discusses simulator greater depth.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Engine for Running Simulations","text":"--date version simulator github page can installed using devtools R package (already installed, open R type install.packages(\"devtools\")). install simulator, type R. installs simulator github.","code":"devtools::install_github(\"jacobbien/simulator\")"},{"path":"/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"An Engine for Running Simulations","text":"Getting Started vignette walks setting first simulation simulator. best way get sense use simulator look examples. several vignettes demonstrate simulator can used conduct simulations famous statistical methods. Lasso vignette: Explains basics, including magrittr pipe making plots tables. Also demonstrates advanced features writing method extensions (refitting result lasso performing cross-validation). James-Stein vignette: Shows step specific parts simulation troubleshooting code. Elastic net vignette: Shows can work sequence methods identical except parameter varies Benjamini-Hochberg vignette: Shows can load preexisting simulation add random draws without rerun anything. also shows one can multiple simulation objects point overlapping sets results.","code":""},{"path":"/reference/Aggregator-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for aggregating evaluated metrics — Aggregator-class","title":"An S4 class for aggregating evaluated metrics — Aggregator-class","text":"object class Aggregator consists label function aggregate single argument ev list length equal number draws.  list consists evaluated values metrics single method single model.","code":""},{"path":"/reference/Aggregator-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for aggregating evaluated metrics — Aggregator-class","text":"label human readable label prefix Eval's label aggregate function argument ev list length nsim returns scalar.","code":""},{"path":"/reference/Component.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a component of the simulator. — Component-class","title":"An S4 class representing a component of the simulator. — Component-class","text":"virtual class.","code":""},{"path":"/reference/Component.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a component of the simulator. — Component-class","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc.","code":""},{"path":"/reference/Draws-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing the random draws from a Model object. — Draws-class","title":"An S4 class representing the random draws from a Model object. — Draws-class","text":"object class Draws represents randomly drawn simulated data generated simulate_from_model called object class Model.  particular, contains named list nsim simulated draws model object.  Model object's simulate function populates list.","code":""},{"path":"/reference/Draws-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing the random draws from a Model object. — Draws-class","text":"class inherits Component class.","code":""},{"path":"/reference/Draws-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing the random draws from a Model object. — Draws-class","text":"name short name identifier.  Must alphanumeric. use name Model object generated . label longer, human readable label indicates randomly drawn. draws list nsim elements created calling simulate function Model object. named list element labeled ri.j index j ranges 1 nsim.  names assigned simulate_from_model. index integer-valued numeric indicates block random draws ","code":""},{"path":"/reference/DrawsRef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a reference to an object of class Draws. — DrawsRef-class","title":"An S4 class representing a reference to an object of class Draws. — DrawsRef-class","text":"identifies necessary information locate saved object class Draws.","code":""},{"path":"/reference/DrawsRef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a reference to an object of class Draws. — DrawsRef-class","text":"dir directory directory getOption(\"simulator.files\") contains referenced Model object model_name name referenced Model object index index referenced Draws object.  Can alternately vector indices. simulator.files simulator functions use getOption(\"simulator.files\") simulator.files provided.","code":""},{"path":"/reference/Evals-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing the evaluation of a metric run by simulator. — Evals-class","title":"An S4 class representing the evaluation of a metric run by simulator. — Evals-class","text":"object class Evals consists information identify model, draws, method, metric objects output derived . also list called evals, output metric stored.  Currently, labels objects also included plot functions can use human-readable labels without requiring re-loading .","code":""},{"path":"/reference/Evals-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing the evaluation of a metric run by simulator. — Evals-class","text":"model_name name Model object output derived . model_label label Model object output derived . index index Draws object output derived . method_name name Method object output derived . method_label label Method object output derived . metric_name name Metric object output derived . metric_label label Metric object output derived . evals named list element labeled method_name evals[[m]] named list element labeled ri.j index j ranges 1 nsim.  Element $ri.j output metric metric_name random draw ri.j.","code":""},{"path":[]},{"path":"/reference/EvalsRef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a reference to an object of class Evals — EvalsRef-class","title":"An S4 class representing a reference to an object of class Evals — EvalsRef-class","text":"identifies necessary information locate saved object class Evals.  Note metric_names needed identify Evals object since Evals objects combine metrics together single file object.","code":""},{"path":"/reference/EvalsRef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a reference to an object of class Evals — EvalsRef-class","text":"dir directory directory getOption(\"simulator.files\") contains referenced Model object model_name name referenced Model object index index referenced Draws object. method_name name Method object output derived . out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects. simulator.files simulator functions use getOption(\"simulator.files\") simulator.files provided.","code":""},{"path":"/reference/ExtendedMethod-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing the extension of a method — ExtendedMethod-class","title":"An S4 class representing the extension of a method — ExtendedMethod-class","text":"object class ExtendedMethod like Method except uses output another method  addition Model  Draws.  can also form chains  ExtendedMethod's, one ExtendedMethod taken  \"base_method\" subsequent ExtendedMethod.  means  latter ExtendedMethod use output former  ExtendedMethod.","code":""},{"path":"/reference/ExtendedMethod-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing the extension of a method — ExtendedMethod-class","text":"one can create ExtendedMethod scratch, typically cleaner write MethodExtension object use addition operator: my_extended_method = my_base_method + my_method_extension. example, my_base_method lasso, my_method_extension might cross-validation, resulting my_extended_method lasso tuning parameter chosen cross-validation.  advantage several methods, write cross-validation MethodExtension object . example one chain ExtendedMethod's, consider lasso example MethodExtension called, say, refit, takes nonzeros lasso's output performs least squares selected variables.  Let cv another MethodExtension.  , refitted_lasso = lasso + refit ExtendedMethod refitted_lasso + cv well. class inherits Component class.","code":""},{"path":"/reference/ExtendedMethod-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing the extension of a method — ExtendedMethod-class","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. base_method list length 1 containing object class Method ExtendedMethod extended extended_method function arguments \"model\", \"draw\", \"\", \"base_method\".","code":""},{"path":"/reference/Method-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a method to be run by simulator. — Method-class","title":"An S4 class representing a method to be run by simulator. — Method-class","text":"object class Method consists name, label, function method takes arguments model draw. draw refers single element list object class Draws.","code":""},{"path":"/reference/Method-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing a method to be run by simulator. — Method-class","text":"class inherits Component class.","code":""},{"path":"/reference/Method-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a method to be run by simulator. — Method-class","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. settings (optional) list \"settings\" method (e.g., tuning parameters related information might distinguish two otherwise identical methods). method function arguments \"model\", \"draw\" (optionally) names matching elements within names(settings)","code":""},{"path":"/reference/MethodExtension-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class used to create an extended version of a method — MethodExtension-class","title":"An S4 class used to create an extended version of a method — MethodExtension-class","text":"object class MethodExtension added Method creates ExtendedMethod.","code":""},{"path":"/reference/MethodExtension-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class used to create an extended version of a method — MethodExtension-class","text":"class inherits Component class.","code":""},{"path":"/reference/MethodExtension-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class used to create an extended version of a method — MethodExtension-class","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. method_extension function arguments \"model\", \"draw\", \"\", \"base_method\".  become function extended_method ExtendedMethod object created.","code":""},{"path":"/reference/Metric-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing an evaluation metric to be used by simulator. — Metric-class","title":"An S4 class representing an evaluation metric to be used by simulator. — Metric-class","text":"object class Metric consists name, label, function metric takes arguments model (class Model) (class Output), output method.","code":""},{"path":"/reference/Metric-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing an evaluation metric to be used by simulator. — Metric-class","text":"class inherits Component class.","code":""},{"path":"/reference/Metric-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing an evaluation metric to be used by simulator. — Metric-class","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. metric function arguments \"model\" \"\" (optionally \"draw\")","code":""},{"path":"/reference/Model-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing the model component of the simulator. — Model-class","title":"An S4 class representing the model component of the simulator. — Model-class","text":"object class Model specifies statistical model.  particular, parameters specified addition function called simulate allows one draw random samples model.","code":""},{"path":"/reference/Model-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing the model component of the simulator. — Model-class","text":"get parameters stored Model object, shortcut my_model@params$my_parameter my_model$my_parameter. class inherits Component class.","code":""},{"path":"/reference/Model-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing the model component of the simulator. — Model-class","text":"name short name identifier.  Must alphanumeric (though -, _, / allowed long start end name. label longer, human readable label can characters spaces, hyphens, etc. params list contains Model object's parameters simulate function arguments nsim names matching elements within names(params). returns list length nsim, element list represents random draw Model object.","code":""},{"path":"/reference/ModelRef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a reference to an object of class Model. — ModelRef-class","title":"An S4 class representing a reference to an object of class Model. — ModelRef-class","text":"identifies necessary information locate saved object class Model.","code":""},{"path":"/reference/ModelRef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a reference to an object of class Model. — ModelRef-class","text":"dir directory directory \"files\" contains referenced Model object name short name identifier. label longer, human readable label can characters simulator.files simulator functions use getOption(\"simulator.files\") simulator.files provided.","code":""},{"path":"/reference/Output-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing the output of a method run by simulator. — Output-class","title":"An S4 class representing the output of a method run by simulator. — Output-class","text":"object class Output consists information identify model, draws, method objects output derived .  also list called , output method stored.","code":""},{"path":"/reference/Output-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing the output of a method run by simulator. — Output-class","text":"model_name name Model object output derived . index index Draws object output derived . method_name name Method object output derived . method_label label Method object output derived . named list element labeled ri.j index j ranges 1 nsim.  Element $ri.j output method method_name random draw ri.j.","code":""},{"path":"/reference/OutputRef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a reference to an object of class Output. — OutputRef-class","title":"An S4 class representing a reference to an object of class Output. — OutputRef-class","text":"identifies necessary information locate saved object class Output.","code":""},{"path":"/reference/OutputRef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a reference to an object of class Output. — OutputRef-class","text":"dir directory directory getOption(\"simulator.files\") contains referenced Model object model_name name referenced Model object index index referenced Draws object.  Can alternately vector indices. method_name name Method object output derived . out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects. simulator.files simulator functions use getOption(\"simulator.files\") simulator.files provided.","code":""},{"path":"/reference/Simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class representing a simulation. — Simulation-class","title":"An S4 class representing a simulation. — Simulation-class","text":"simulation set references simulator objects saved file.  DrawsRef, OutputRef, EvalsRef objects organized model separate lists.","code":""},{"path":"/reference/Simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An S4 class representing a simulation. — Simulation-class","text":"reference ref added simulation sim, ref@dir changed referenced file located file.path(sim@dir, ref@dir).","code":""},{"path":"/reference/Simulation.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class representing a simulation. — Simulation-class","text":"name short name identifier.  Must alphanumeric (can also - _ within label longer, human readable label can characters spaces, hyphens, etc. dir name directory directory named \"files\" exists. model_refs list ModelRef objects draws_refs list lists DrawsRef objects output_refs list lists OutputRef objects evals_refs list lists EvalsRef objects","code":""},{"path":"/reference/add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a reference to a simulation — add","title":"Add a reference to a simulation — add","text":"Adds ModelRef, DrawsRef, OutputRef, EvalsRef simulation object. add DrawsRef, corresponding ModelRef must already added. Likewise, add OutputRef, corresponding DrawsRef must already added.  add EvalsRef, corresponding OutputRef must added. One can also pass list objects.","code":""},{"path":"/reference/add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a reference to a simulation — add","text":"","code":"add(sim, ref, ...)  # S4 method for Simulation,ModelRef add(sim, ref, update_saved = TRUE)  # S4 method for Simulation,DrawsRef add(sim, ref, update_saved = TRUE)  # S4 method for Simulation,OutputRef add(sim, ref, update_saved = TRUE)  # S4 method for Simulation,EvalsRef add(sim, ref, update_saved = TRUE)  # S4 method for Simulation,list add(sim, ref, update_saved = TRUE)"},{"path":"/reference/add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a reference to a simulation — add","text":"sim simulation added ref reference object added ... used update_saved default TRUE. Determines whether change simulation object saved file","code":""},{"path":"/reference/add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a reference to a simulation — add","text":"modified simulation object saved file update_saved TRUE.","code":""},{"path":"/reference/add_bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a string bold in a certain format — add_bold","title":"Make a string bold in a certain format — add_bold","text":"example, latex take \"2\" output \"\\bf 2\"; html output \"<b>2<\/b>\".","code":""},{"path":"/reference/add_bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a string bold in a certain format — add_bold","text":"","code":"add_bold(str, output_type)"},{"path":"/reference/add_bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a string bold in a certain format — add_bold","text":"str string strings (character) make bold output_type output type (see knitr::kable's format)","code":""},{"path":"/reference/add_dref_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to add DrawsRef to a list of DrawsRef objects — add_dref_to_list","title":"Internal function to add DrawsRef to a list of DrawsRef objects — add_dref_to_list","text":"Makes sure DrawsRef index already list. Although checked, assumed called list DrawsRef objects coming model.","code":""},{"path":"/reference/add_dref_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to add DrawsRef to a list of DrawsRef objects — add_dref_to_list","text":"","code":"add_dref_to_list(dref, dref_list, sim_dir)"},{"path":"/reference/add_dref_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to add DrawsRef to a list of DrawsRef objects — add_dref_to_list","text":"dref DrawsRef add dref_list list DrawsRef objects sim_dir sim@dir","code":""},{"path":"/reference/add_eref_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to add EvalsRef to a list of EvalsRef objects — add_eref_to_list","title":"Internal function to add EvalsRef to a list of EvalsRef objects — add_eref_to_list","text":"Makes sure EvalsRef index method already list. Although checked, assumed called list EvalsRef objects coming model.","code":""},{"path":"/reference/add_eref_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to add EvalsRef to a list of EvalsRef objects — add_eref_to_list","text":"","code":"add_eref_to_list(eref, eref_list, sim_dir)"},{"path":"/reference/add_eref_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to add EvalsRef to a list of EvalsRef objects — add_eref_to_list","text":"eref EvalsRef add eref_list list EvalsRef objects sim_dir sim@dir","code":""},{"path":"/reference/add_oref_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to add OutputRef to a list of OutputRef objects — add_oref_to_list","title":"Internal function to add OutputRef to a list of OutputRef objects — add_oref_to_list","text":"Makes sure OutputRef index method already list. Although checked, assumed called list OutputRef objects coming model.","code":""},{"path":"/reference/add_oref_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to add OutputRef to a list of OutputRef objects — add_oref_to_list","text":"","code":"add_oref_to_list(oref, oref_list, sim_dir)"},{"path":"/reference/add_oref_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to add OutputRef to a list of OutputRef objects — add_oref_to_list","text":"oref OutputRef add oref_list list OutputRef objects sim_dir sim@dir","code":""},{"path":"/reference/aggregate_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply aggregator to a list of Evals objects — aggregate_evals","title":"Apply aggregator to a list of Evals objects — aggregate_evals","text":"Returns num_models num_methods matrix","code":""},{"path":"/reference/aggregate_evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply aggregator to a list of Evals objects — aggregate_evals","text":"","code":"aggregate_evals(evals_list, aggregator)"},{"path":"/reference/aggregate_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply aggregator to a list of Evals objects — aggregate_evals","text":"evals_list list Evals objects aggregator object class Aggregator","code":""},{"path":"/reference/as.data.frame.Evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an Evals to a data.frame — as.data.frame.Evals","title":"Convert an Evals to a data.frame — as.data.frame.Evals","text":"equivalent calling (x, \"data.frame\")","code":""},{"path":"/reference/as.data.frame.Evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an Evals to a data.frame — as.data.frame.Evals","text":"","code":"# S3 method for Evals as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.Evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an Evals to a data.frame — as.data.frame.Evals","text":"x object class Evals row.names used optional used ... used","code":""},{"path":"/reference/as.data.frame.Model.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Model to a data.frame — as.data.frame.Model","title":"Convert a Model to a data.frame — as.data.frame.Model","text":"Ignores params length 1 numeric character. equivalent calling (x, \"data.frame\")","code":""},{"path":"/reference/as.data.frame.Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Model to a data.frame — as.data.frame.Model","text":"","code":"# S3 method for Model as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.Model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Model to a data.frame — as.data.frame.Model","text":"x object class Model row.names used optional used ... used","code":""},{"path":"/reference/as.data.frame.listofEvals.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of Evals to a data.frame — as.data.frame.listofEvals","title":"Convert a list of Evals to a data.frame — as.data.frame.listofEvals","text":"load generates list Evals, assigns (S3) class listofEvals, inherited list, function invoked instead .data.frame.list, defined base.","code":""},{"path":"/reference/as.data.frame.listofEvals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of Evals to a data.frame — as.data.frame.listofEvals","text":"","code":"# S3 method for listofEvals as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.listofEvals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of Evals to a data.frame — as.data.frame.listofEvals","text":"x listofEvals object row.names used optional used ... used","code":""},{"path":"/reference/as.data.frame.listofModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a List of Models to a data.frame — as.data.frame.listofModels","title":"Convert a List of Models to a data.frame — as.data.frame.listofModels","text":"load generates list Models, assigns (S3) class listofModels, inherited list, function invoked instead .data.frame.list, defined base.","code":""},{"path":"/reference/as.data.frame.listofModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a List of Models to a data.frame — as.data.frame.listofModels","text":"","code":"# S3 method for listofModels as.data.frame(x, row.names = NULL, optional = FALSE, ...)"},{"path":"/reference/as.data.frame.listofModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a List of Models to a data.frame — as.data.frame.listofModels","text":"x list row.names used optional used ... used","code":""},{"path":"/reference/cash-Model-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element of Model's params list — $,Model-method","title":"Get element of Model's params list — $,Model-method","text":"Get element Model's params list","code":""},{"path":"/reference/cash-Model-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element of Model's params list — $,Model-method","text":"","code":"# S4 method for Model $(x, name)"},{"path":"/reference/cash-Model-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element of Model's params list — $,Model-method","text":"x object class Model name name element appearing x@params","code":""},{"path":"/reference/catsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate and print for the simulator — catsim","title":"Concatenate and print for the simulator — catsim","text":"internal use.  calls cat getOption(\"simulator.verbose\").","code":""},{"path":"/reference/catsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate and print for the simulator — catsim","text":"","code":"catsim(...)"},{"path":"/reference/catsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate and print for the simulator — catsim","text":"... arguments passed cat","code":""},{"path":"/reference/create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create template for a new set of simulations — create","title":"Create template for a new set of simulations — create","text":"function fastest way get started.  Creates skeleton simulation.","code":""},{"path":"/reference/create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create template for a new set of simulations — create","text":"","code":"create(dir = \"./my_sims\")"},{"path":"/reference/create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create template for a new set of simulations — create","text":"dir create skeleton new set simulations","code":""},{"path":"/reference/create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create template for a new set of simulations — create","text":"","code":"if (FALSE) {  create(\"./examples\")  }"},{"path":"/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe the contents of a simulator directory — describe","title":"Describe the contents of a simulator directory — describe","text":"Describe contents simulator directory","code":""},{"path":"/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe the contents of a simulator directory — describe","text":"","code":"describe(dir = \".\")"},{"path":"/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe the contents of a simulator directory — describe","text":"dir name directory directory named \"files\" exists","code":""},{"path":"/reference/do_in_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Do a function in parallel. — do_in_parallel","title":"Do a function in parallel. — do_in_parallel","text":"internal function. function_to_do done parallel output saved either slave (locally) master.","code":""},{"path":"/reference/do_in_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do a function in parallel. — do_in_parallel","text":"","code":"do_in_parallel(   function_to_do,   function_params,   save_to_file,   save_params,   socket_names,   libraries,   save_locally = TRUE )"},{"path":"/reference/do_in_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do a function in parallel. — do_in_parallel","text":"function_to_do function done parallel function_params list function_params[[]] named list parameters passed function_to_do job save_to_file function saves stuff file save_params list save_params[[]] named list parameters passed save_to_file job . save_params[[]] must include out_dir, location file saved. socket_names quoting makePSOCKcluster: \"either character vector host names run worker copies R, positive integer (case number copies run localhost).\" libraries character vector R packages needed slaves. save_locally TRUE, files saved slaves.  FALSE, saved master.","code":""},{"path":"/reference/draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one or more draws from a simulation — draws","title":"Get one or more draws from a simulation — draws","text":"Returns either draws objects references .  See model function information ... subset arguments, used specify subset models.","code":""},{"path":"/reference/draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one or more draws from a simulation — draws","text":"","code":"draws(sim, ..., subset = NULL, index, reference = FALSE)"},{"path":"/reference/draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one or more draws from a simulation — draws","text":"sim simulation object ... logical conditions specify subset models.  Conditions can involve params model length 1 class numeric character. subset vector integers indexing models vector model names. select models based parameter values, use .... However, using ... slower using subset. index vector positive integers specifying draws objects desired. missing, draws' outputs returned. reference whether return ModelRef Model object ","code":""},{"path":"/reference/draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get one or more draws from a simulation — draws","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3)  # then we could get the simulated draws as follows:  d <- draws(sim)  d@draws$r1.1 # first random draw  }"},{"path":"/reference/evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one or more evals from a simulation — evals","title":"Get one or more evals from a simulation — evals","text":"Returns either Evals object reference .","code":""},{"path":"/reference/evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one or more evals from a simulation — evals","text":"","code":"evals(sim, ..., subset = NULL, index, methods, reference = FALSE)"},{"path":"/reference/evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one or more evals from a simulation — evals","text":"sim simulation object ... logical conditions specify subset models.  Conditions can involve params model length 1 class numeric character. subset vector integers indexing models vector model names. select models based parameter values, use .... However, using ... slower using subset. index vector positive integers specifying draws' objects desired. missing, draws' evals returned. methods character vector method names interest.  missing, methods' evals returned reference whether return ModelRef Model object ","code":""},{"path":[]},{"path":"/reference/evals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get one or more evals from a simulation — evals","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method) %>%    evaluate(my_example_loss)  # then we could get the metric evaluated on the method's output:  e <- evals(sim)  # we can export it as a data.frame  as.data.frame(e)  # or we can get at a particular draw-method-metric triplet  e@evals$`my-method`$r1.1$myloss  }"},{"path":"/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate outputs of methods according to provided metrics. — evaluate","title":"Evaluate outputs of methods according to provided metrics. — evaluate","text":"Given Metric object list Metric objects, function evaluates Output object according metrics.  computed values metrics saved file.  \"user\" time run method (measured system.time) added metrics default unless one passed metrics name \"time\".","code":""},{"path":"/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate outputs of methods according to provided metrics. — evaluate","text":"","code":"evaluate(object, metrics)"},{"path":"/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate outputs of methods according to provided metrics. — evaluate","text":"object object class OutputRef produced run_method (list objects). object Simulation, function applied  referenced outputs simulation returns Simulation object references added new evals created. metrics list Metric objects single Metric object.","code":""},{"path":"/reference/evaluate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate outputs of methods according to provided metrics. — evaluate","text":"function creates objects class Evals saves file (dir/model_name/<out_loc>/r<index>_<method_name>_evals.Rdata. Since evaluating metrics usually (statistical methodological papers) fast, parallel functionality developed evaluation component.","code":""},{"path":[]},{"path":"/reference/evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate outputs of methods according to provided metrics. — evaluate","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method)  # then we could add  sim <- evaluate(sim, my_example_loss)  }"},{"path":"/reference/evaluate_internal.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate outputs of methods according to provided metrics. — evaluate_internal","title":"Evaluate outputs of methods according to provided metrics. — evaluate_internal","text":"Given Metric object list Metric objects, function evaluates Output object according metrics.  computed values metrics saved file.","code":""},{"path":"/reference/evaluate_internal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate outputs of methods according to provided metrics. — evaluate_internal","text":"","code":"evaluate_internal(   metrics,   dir = \".\",   model_name,   index,   method_names,   out_loc = \"out\" )"},{"path":"/reference/evaluate_internal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate outputs of methods according to provided metrics. — evaluate_internal","text":"metrics list Metric objects single Metric object dir directory Model object saved (generate_model) model_name Model object's name attribute index index computed Draws object.  Can alternately vector indices. method_names Method objects' name attributes character vector. out_loc (optional) length-1 character vector gives location (relative model's path) method outputs stored.","code":""},{"path":"/reference/evaluate_internal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate outputs of methods according to provided metrics. — evaluate_internal","text":"function creates objects class Evals saves file (dir/model_name/<out_loc>/r<index>_<method_name>_evals.Rdata. Since evaluating metrics usually (statistical methodological papers) fast, parallel functionality developed evaluation component.","code":""},{"path":"/reference/evaluate_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Run one or more metrics on outputs. — evaluate_single","title":"Run one or more metrics on outputs. — evaluate_single","text":"internal function.  Users call wrapper function evaluate. \"single\" refers single output (thus single method, though necessarily single index). metrics provided run saved together file.","code":""},{"path":"/reference/evaluate_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run one or more metrics on outputs. — evaluate_single","text":"","code":"evaluate_single(metrics, model, output, draws = NULL)"},{"path":"/reference/evaluate_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run one or more metrics on outputs. — evaluate_single","text":"metrics list Metric objects model Model object output Output object draws (optional) Draws object NULL","code":""},{"path":"/reference/generate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a model. — generate_model","title":"Generate a model. — generate_model","text":"function executes make_model function provided user writes file resulting Model object(s).  example, simulating regression fixed design, X generated function n, p, beta, sigma also specified.","code":""},{"path":"/reference/generate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a model. — generate_model","text":"","code":"generate_model(object = \".\", make_model, ..., seed = 123, vary_along = NULL)"},{"path":"/reference/generate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a model. — generate_model","text":"object name directory directory named \"files\" exists (created) save Model object . Default current working directory. can object class Simulation, case object@dir used simulation object returned instead object class ModelRef. make_model function outputs object class Model.  list functions. ... optional parameters may passed make_model seed integer seed random number generator. vary_along character vector elements contained names(...) See description details.","code":""},{"path":"/reference/generate_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a model. — generate_model","text":"make_model arguments, can passed using .... passed directly make_model except arguments named vary_along.  arguments lists separate model created combination elements lists.  example, vary_along = c(\"n\", \"p\"), can pass n=.list(c(50, 100, 150)) p=.list(c(10, 100)) 6 models created, one pair n p.  pair (n,p), distinct extension added end model name. extension generated using hash function different values vary_along parameters lead different model name extensions. ensures one later decides add values vary_along parameters, lead pre-existing files overwritten (unless values vary_along combination used . object directory name, function returns reference list references model(s) generated. object Simulation, function returns Simulation object references added new models created.  changes Simulation object saved file. make_model called generating object class Model, called model, saved dir/name/model.Rdata (name name attribute model). file also contains random number generator state information function make_model date model created.","code":""},{"path":[]},{"path":"/reference/generate_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a model. — generate_model","text":"","code":"# initialize a new simulation  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir())  # generate a model (and add it to the simulation)  sim <- generate_model(sim, make_my_example_model, n = 20) #> ..Created model and saved in normal-data/model.Rdata  # generate a sequence of models (and add them to the simulation)  sim <- generate_model(sim, make_my_example_model,                        n = list(10, 20, 30),                        vary_along = \"n\") #> ..Created model and saved in normal-data/n_10/model.Rdata #> ..Created model and saved in normal-data/n_20/model.Rdata #> ..Created model and saved in normal-data/n_30/model.Rdata"},{"path":"/reference/get_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the contents of a simulator directory — get_contents","title":"Get the contents of a simulator directory — get_contents","text":"function gives detailed information stored \"files\" directory.  particular, gives complete paths draws, outputs, evals files.  can useful situations draws outputs files longer needed take lot memory. case user delete files command system(paste(c(\"rm\", contents$out_files), collapse = \" \")). said, one must cautious deleting files since simulator generally assumes earlier stages' files available deleting may cause errors.  However, one essentially finished simulation evaluated metrics computed methods' raw outputs taking lot disk space, one might consider deleting out_files (/draws_files).","code":""},{"path":"/reference/get_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the contents of a simulator directory — get_contents","text":"","code":"get_contents(dir = \".\", out_loc = \"out\")"},{"path":"/reference/get_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the contents of a simulator directory — get_contents","text":"dir name directory directory named \"files\" exists out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects.  Usually just \"\"","code":""},{"path":"/reference/get_files_not_in_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Find files in simulator directory not referred to by any simulations — get_files_not_in_simulations","title":"Find files in simulator directory not referred to by any simulations — get_files_not_in_simulations","text":"one completed simulation studies, function can called identify files may created along way longer used simulations.  safe delete files.","code":""},{"path":"/reference/get_files_not_in_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find files in simulator directory not referred to by any simulations — get_files_not_in_simulations","text":"","code":"get_files_not_in_simulations(dir, out_loc = \"out\")"},{"path":"/reference/get_files_not_in_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find files in simulator directory not referred to by any simulations — get_files_not_in_simulations","text":"dir name directory directory named \"files\" exists out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects.  Usually just \"\"","code":""},{"path":"/reference/get_model_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns indices of a specified subset of sim@model_refs — get_model_indices","title":"Returns indices of a specified subset of sim@model_refs — get_model_indices","text":"See model information various formats subset.","code":""},{"path":"/reference/get_model_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns indices of a specified subset of sim@model_refs — get_model_indices","text":"","code":"get_model_indices(sim, subset)"},{"path":"/reference/get_model_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns indices of a specified subset of sim@model_refs — get_model_indices","text":"sim simulation object subset vector indicating models returned.","code":""},{"path":"/reference/get_relative_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relative path — get_relative_path","title":"Get relative path — get_relative_path","text":"Given base path specific path, returns string str file.path(base_path, str) location path.","code":""},{"path":"/reference/get_relative_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relative path — get_relative_path","text":"","code":"get_relative_path(base_path, path)"},{"path":"/reference/get_relative_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get relative path — get_relative_path","text":"base_path base path path specific path","code":""},{"path":"/reference/get_simulation_with_all_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a simulation object containing references to all files in directory — get_simulation_with_all_files","title":"Returns a simulation object containing references to all files in directory — get_simulation_with_all_files","text":"Returns simulation object containing references files directory","code":""},{"path":"/reference/get_simulation_with_all_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a simulation object containing references to all files in directory — get_simulation_with_all_files","text":"","code":"get_simulation_with_all_files(dir, out_loc = \"out\")"},{"path":"/reference/get_simulation_with_all_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a simulation object containing references to all files in directory — get_simulation_with_all_files","text":"dir name directory directory named \"files\" exists out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects.  Usually just \"\"","code":""},{"path":"/reference/ggplot_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a boxplot of a metric for each method using ggplot2 — ggplot_eval","title":"Make a boxplot of a metric for each method using ggplot2 — ggplot_eval","text":"Make boxplot metric method using ggplot2","code":""},{"path":"/reference/ggplot_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a boxplot of a metric for each method using ggplot2 — ggplot_eval","text":"","code":"ggplot_eval(   evals_df,   metric_name,   method_name,   method_label,   main,   facet_mains,   ylab,   ylim,   nrow,   ncol )"},{"path":"/reference/grapes-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"This is not magrittr's pipe (actually it is) — %>%","title":"This is not magrittr's pipe (actually it is) — %>%","text":"magrittr's pipe (actually )","code":""},{"path":"/reference/load-DrawsRef-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a DrawsRef — load,DrawsRef-method","title":"Load a DrawsRef — load,DrawsRef-method","text":"Load DrawsRef","code":""},{"path":"/reference/load-DrawsRef-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a DrawsRef — load,DrawsRef-method","text":"","code":"# S4 method for DrawsRef load(file)"},{"path":"/reference/load-DrawsRef-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a DrawsRef — load,DrawsRef-method","text":"file object load","code":""},{"path":"/reference/load-EvalsRef-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an EvalsRef — load,EvalsRef-method","title":"Load an EvalsRef — load,EvalsRef-method","text":"Load EvalsRef","code":""},{"path":"/reference/load-EvalsRef-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an EvalsRef — load,EvalsRef-method","text":"","code":"# S4 method for EvalsRef load(file)"},{"path":"/reference/load-EvalsRef-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an EvalsRef — load,EvalsRef-method","text":"file object load","code":""},{"path":"/reference/load-ModelRef-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a ModelRef — load,ModelRef-method","title":"Load a ModelRef — load,ModelRef-method","text":"Load ModelRef","code":""},{"path":"/reference/load-ModelRef-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a ModelRef — load,ModelRef-method","text":"","code":"# S4 method for ModelRef load(file)"},{"path":"/reference/load-ModelRef-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a ModelRef — load,ModelRef-method","text":"file object load","code":""},{"path":"/reference/load-OutputRef-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an OutputRef — load,OutputRef-method","title":"Load an OutputRef — load,OutputRef-method","text":"Load OutputRef","code":""},{"path":"/reference/load-OutputRef-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an OutputRef — load,OutputRef-method","text":"","code":"# S4 method for OutputRef load(file)"},{"path":"/reference/load-OutputRef-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an OutputRef — load,OutputRef-method","text":"file object load","code":""},{"path":"/reference/load-list-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a list of reference objects — load,list-method","title":"Load a list of reference objects — load,list-method","text":"Load list reference objects","code":""},{"path":"/reference/load-list-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a list of reference objects — load,list-method","text":"","code":"# S4 method for list load(file)"},{"path":"/reference/load-list-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a list of reference objects — load,list-method","text":"file list objects load","code":""},{"path":"/reference/load_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Load one or more draws objects from file. — load_draws","title":"Load one or more draws objects from file. — load_draws","text":"simulate_from_model called, function can used load one saved Draws object(s) (along RNG information).  multiple indices provided, combined new single Draws object. simulation object available, easier use function draws load .","code":""},{"path":"/reference/load_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load one or more draws objects from file. — load_draws","text":"","code":"load_draws(dir, model_name, index, more_info = FALSE, simulator.files = NULL)"},{"path":"/reference/load_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load one or more draws objects from file. — load_draws","text":"dir directory passed generate_model) model_name Model object's name attribute index vector positive integers. more_info TRUE, returns additional information state RNG calling generate_model simulator.files NULL, getOption(\"simulator.files\") used.","code":""},{"path":[]},{"path":"/reference/load_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Load one or more Evals objects from file. — load_evals","title":"Load one or more Evals objects from file. — load_evals","text":"evaluate called, function can used load one saved Evals object(s). multiple indices provided, combined index new single Evals object.  multiple methods provided, list Evals objects returned.","code":""},{"path":"/reference/load_evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load one or more Evals objects from file. — load_evals","text":"","code":"load_evals(   dir,   model_name,   index,   method_names,   metric_names = NULL,   out_loc = \"out\",   simulator.files = NULL )  load_evals_from_ref(ref, metric_names = NULL)"},{"path":"/reference/load_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load one or more Evals objects from file. — load_evals","text":"dir directory passed generate_model) model_name Model object's name index vector positive integers. method_names name one Method objects. metric_names (optional) character vector elements evals loaded. NULL, elements loaded. out_loc needed used call simulator.files NULL, getOption(\"simulator.files\") used. run_method. ref object class EvalsRef","code":""},{"path":[]},{"path":"/reference/load_libraries_on_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Load necessary libraries on a cluster — load_libraries_on_cluster","title":"Load necessary libraries on a cluster — load_libraries_on_cluster","text":"Load necessary libraries cluster","code":""},{"path":"/reference/load_libraries_on_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load necessary libraries on a cluster — load_libraries_on_cluster","text":"","code":"load_libraries_on_cluster(cl, libs)"},{"path":"/reference/load_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a model from file. — load_model","title":"Load a model from file. — load_model","text":"generate_model called, function can used load saved Model object (along RNG state information desired).","code":""},{"path":"/reference/load_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a model from file. — load_model","text":"","code":"load_model(dir, model_name, more_info = FALSE, simulator.files = NULL)"},{"path":"/reference/load_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a model from file. — load_model","text":"dir directory passed generate_model) model_name Model object's name attribute more_info TRUE, returns additional information state RNG calling generate_model simulator.files NULL, getOption(\"simulator.files\") used.","code":""},{"path":"/reference/load_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load a model from file. — load_model","text":"Depending more_info, either returns Model object list containing Model object information. simulation object available, easier use function model load model.","code":""},{"path":[]},{"path":"/reference/load_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load one or more output objects from file. — load_outputs","title":"Load one or more output objects from file. — load_outputs","text":"run_method called, function can used load one saved Output object(s). multiple indices provided, combined new single Output object. simulation object available, easier use function output load .","code":""},{"path":"/reference/load_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load one or more output objects from file. — load_outputs","text":"","code":"load_outputs(   dir,   model_name,   index,   method_name,   out_names = NULL,   out_loc = \"out\",   more_info = FALSE,   simulator.files = NULL )  load_outputs_from_ref(ref, out_names = NULL)"},{"path":"/reference/load_outputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load one or more output objects from file. — load_outputs","text":"dir directory passed generate_model) model_name Model object's name index vector positive integers. method_name Method object's name out_names character vector elements output loaded. NULL, elements loaded. out_loc needed used call run_method. more_info TRUE, returns additional information state RNG calling simulate_from_model simulator.files NULL, getOption(\"simulator.files\") used. ref object class OutputRef","code":""},{"path":[]},{"path":"/reference/load_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a simulation object — load_simulation","title":"Load a simulation object — load_simulation","text":"Loads object class Simulation.  Note dir gives directory Simulation object stored.  Thus, working directory different working directory Simulation object created, dir different one passed new_simulation.","code":""},{"path":"/reference/load_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a simulation object — load_simulation","text":"","code":"load_simulation(name, dir = \".\")"},{"path":"/reference/load_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a simulation object — load_simulation","text":"name short name identifier.  Must alphanumeric. dir directory contains \"files\" directory simulation","code":""},{"path":[]},{"path":"/reference/load_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a simulation object — load_simulation","text":"","code":"sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) rm(sim) sim <- load_simulation(\"normal-example\", dir = tempdir())"},{"path":"/reference/make_my_example_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Make My Example Model — make_my_example_model","title":"Make My Example Model — make_my_example_model","text":"function used examples.  returns Model object.  particular, represents n ..d. draws normal mean 2 variance 1.","code":""},{"path":"/reference/make_my_example_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make My Example Model — make_my_example_model","text":"","code":"make_my_example_model(n)"},{"path":"/reference/make_my_example_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make My Example Model — make_my_example_model","text":"n number ..d. draws","code":""},{"path":[]},{"path":"/reference/memory_as_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Write memory in human readable way — memory_as_string","title":"Write memory in human readable way — memory_as_string","text":"Write memory human readable way","code":""},{"path":"/reference/memory_as_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write memory in human readable way — memory_as_string","text":"","code":"memory_as_string(memory_in_bytes)"},{"path":"/reference/memory_as_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write memory in human readable way — memory_as_string","text":"memory_in_bytes amount memory Bytes.","code":""},{"path":"/reference/model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one or more models from a simulation — model","title":"Get one or more models from a simulation — model","text":"Returns either models references .","code":""},{"path":"/reference/model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one or more models from a simulation — model","text":"","code":"model(sim, ..., subset = NULL, reference = FALSE)"},{"path":"/reference/model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one or more models from a simulation — model","text":"sim simulation object ... logical conditions specify subset models.  Conditions can involve params model length 1 class numeric character. subset vector integers indexing models vector model names. select models based parameter values, use .... However, using ... slower using subset. reference whether return ModelRef Model object ","code":""},{"path":"/reference/model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get one or more models from a simulation — model","text":"two main ways specify subset models.  (1) easiest way writing conditional expression involving parameters passing ....  example, n > 100 & p <= 20. parameters length one either numeric character can used expressions.  (2) faster way retrieve subset models use subset argument.  can either set numerical values (specifying models load based order models stored simulation object.  order can ascertained printing simulation object.) set character vector model names desired. approach (1) convenient, requires loading models  file. may slow situations lot models  /models large thus slow load.","code":""},{"path":"/reference/model_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model names in a Simulation — model_names","title":"Get model names in a Simulation — model_names","text":"Get model names Simulation","code":""},{"path":"/reference/model_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model names in a Simulation — model_names","text":"","code":"model_names(sim)"},{"path":"/reference/model_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model names in a Simulation — model_names","text":"sim object class Simulation","code":""},{"path":"/reference/models_as_data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of Model objects into a data.frame — models_as_data.frame","title":"Convert a list of Model objects into a data.frame — models_as_data.frame","text":"Ignores params length 1 numeric character","code":""},{"path":"/reference/models_as_data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of Model objects into a data.frame — models_as_data.frame","text":"","code":"models_as_data.frame(m)"},{"path":"/reference/models_as_data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of Model objects into a data.frame — models_as_data.frame","text":"m model object","code":""},{"path":"/reference/my_example_loss.html","id":null,"dir":"Reference","previous_headings":"","what":"My Example Loss — my_example_loss","title":"My Example Loss — my_example_loss","text":"Metric object used examples.  squared error loss.","code":""},{"path":"/reference/my_example_loss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My Example Loss — my_example_loss","text":"","code":"my_example_loss"},{"path":"/reference/my_example_loss.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"My Example Loss — my_example_loss","text":"object class Metric length 1.","code":""},{"path":[]},{"path":"/reference/my_example_method.html","id":null,"dir":"Reference","previous_headings":"","what":"My Example Method — my_example_method","title":"My Example Method — my_example_method","text":"Method object used examples.  sample mean data.","code":""},{"path":"/reference/my_example_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"My Example Method — my_example_method","text":"","code":"my_example_method"},{"path":"/reference/my_example_method.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"My Example Method — my_example_method","text":"object class Method length 1.","code":""},{"path":[]},{"path":"/reference/new_aggregator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Aggregator object — new_aggregator","title":"Create an Aggregator object — new_aggregator","text":"Creates new Aggregator object.","code":""},{"path":"/reference/new_aggregator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Aggregator object — new_aggregator","text":"","code":"new_aggregator(label, aggregate)"},{"path":"/reference/new_aggregator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Aggregator object — new_aggregator","text":"label human readable label aggregate function argument ev list length equal number draws element named list. element list corresponds metric computed. particular, given Evals object o, aggregate takes input o@evals[[method_name]] (list kind just described). function aggregate return scalar.","code":""},{"path":"/reference/new_extended_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ExtendedMethod object — new_extended_method","title":"Create an ExtendedMethod object — new_extended_method","text":"Creates new ExtendedMethod object.","code":""},{"path":"/reference/new_extended_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ExtendedMethod object — new_extended_method","text":"","code":"new_extended_method(name, label, base_method, extended_method)"},{"path":"/reference/new_extended_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ExtendedMethod object — new_extended_method","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. base_method object class Method class Method extended extended_method function arguments \"model\", \"draw\", \"\", \"base_method\".","code":""},{"path":"/reference/new_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Method object — new_method","title":"Create a Method object — new_method","text":"Creates new Method object.","code":""},{"path":"/reference/new_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Method object — new_method","text":"","code":"new_method(name, label, method, settings = list())"},{"path":"/reference/new_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Method object — new_method","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. method function arguments \"model\", \"draw\" (optionally) names matching elements within names(settings) settings (optional) list \"settings\" method (e.g., tuning parameters related information might distinguish two otherwise identical methods).","code":""},{"path":"/reference/new_method_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object that can be used to make an extended version of a method — new_method_extension","title":"Create an object that can be used to make an extended version of a method — new_method_extension","text":"Creates object class MethodExtension, added Method creates ExtendedMethod.","code":""},{"path":"/reference/new_method_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object that can be used to make an extended version of a method — new_method_extension","text":"","code":"new_method_extension(name, label, method_extension)"},{"path":"/reference/new_method_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object that can be used to make an extended version of a method — new_method_extension","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. method_extension function arguments \"model\", \"draw\", \"\", \"base_method\".  become function extended_method ExtendedMethod object created.","code":""},{"path":"/reference/new_method_extension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an object that can be used to make an extended version of a method — new_method_extension","text":"class inherits Component class.","code":""},{"path":"/reference/new_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Metric object — new_metric","title":"Create a Metric object — new_metric","text":"Creates new Metric object.","code":""},{"path":"/reference/new_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Metric object — new_metric","text":"","code":"new_metric(name, label, metric)"},{"path":"/reference/new_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Metric object — new_metric","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. metric function arguments \"model\" \"\" (optionally \"draw\")","code":""},{"path":"/reference/new_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Model object — new_model","title":"Create a Model object — new_model","text":"Creates new Model object.","code":""},{"path":"/reference/new_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Model object — new_model","text":"","code":"new_model(name, label, params = list(), simulate)"},{"path":"/reference/new_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Model object — new_model","text":"name short name identifier.  Must alphanumeric (though -, _, / allowed long start end name. label longer, human readable label can characters spaces, hyphens, etc. params list contains Model object's parameters simulate function arguments nsim names matching elements within names(params). returns list length nsim, element list represents random draw Model object.","code":""},{"path":"/reference/new_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Model object — new_model","text":"","code":"make_my_example_model <- function(n) {   new_model(name = \"normal-data\",             label = sprintf(\"Normal (n = %s)\", n),             params = list(n = n, mu = 2),             simulate = function(n, mu, nsim) {               # this function must return a list of length nsim               x <- matrix(rnorm(n * nsim), n, nsim)               x <- mu + x # true mean is mu               return(split(x, col(x))) # make each col its own list element             }) }"},{"path":"/reference/new_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new simulation object — new_simulation","title":"Make a new simulation object — new_simulation","text":"Creates object class Simulation.  addition name label, object consists set references objects class ModelRef, DrawsRef, OutputRef, EvalsRef.","code":""},{"path":"/reference/new_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new simulation object — new_simulation","text":"","code":"new_simulation(name, label, dir = \".\", refs = list(), save_to_file = TRUE)"},{"path":"/reference/new_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new simulation object — new_simulation","text":"name short name identifier.  Must alphanumeric. label longer, human readable label can characters spaces, hyphens, etc. dir directory reference's directories relative refs list containing objects class ModelRef, DrawsRef, OutputRef, EvalsRef save_to_file whether new simulation saved file. Default TRUE. TRUE, simulation can loaded new R session using dir name.","code":""},{"path":"/reference/new_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a new simulation object — new_simulation","text":"Simulation object basic unit simulation study.  Roughly, one can think files relevant single figure. might single plot series related plots/panels.  also correspond single table.  Note Simulation object light-weight even large simulations stores references objects objects .  functions model, draws, output, evals can used load individual objects simulation. Simulation object created saved file can loaded new R session.  simulation saved dir/files/name.Rdata. Note: \"files\" default, name directory getOption(\"simulator.files\"), value getOption(\"simulator.files\") model created.","code":""},{"path":[]},{"path":"/reference/new_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a new simulation object — new_simulation","text":"","code":"sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir())"},{"path":"/reference/output.html","id":null,"dir":"Reference","previous_headings":"","what":"Get one or more outputs from a simulation — output","title":"Get one or more outputs from a simulation — output","text":"Returns either output object reference .","code":""},{"path":"/reference/output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get one or more outputs from a simulation — output","text":"","code":"output(sim, ..., subset = NULL, index, methods, reference = FALSE)"},{"path":"/reference/output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get one or more outputs from a simulation — output","text":"sim simulation object ... logical conditions specify subset models.  Conditions can involve params model length 1 class numeric character. subset vector integers indexing models vector model names. select models based parameter values, use .... However, using ... slower using subset. index vector positive integers specifying draws' objects desired. missing, draws' outputs returned. methods character vector method names interest.  missing, methods' outputs returned reference whether return ModelRef Model object ","code":""},{"path":"/reference/output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get one or more outputs from a simulation — output","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method)  # then we could get the method's output as follows:  o <- output(sim)  o@out$r1.1 # first random draw's output  }"},{"path":"/reference/outputs_or_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used by both outputs and evals — outputs_or_evals","title":"Internal function used by both outputs and evals — outputs_or_evals","text":"Internal function used outputs evals","code":""},{"path":"/reference/outputs_or_evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used by both outputs and evals — outputs_or_evals","text":"","code":"outputs_or_evals(   sim,   refs,   sort_by_method,   subset,   index,   methods,   reference,   ... )"},{"path":"/reference/outputs_or_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function used by both outputs and evals — outputs_or_evals","text":"sim simulation object refs either sim@output_refs sim@evals_refs sort_by_method whether returned object method's objects list ","code":""},{"path":"/reference/plot_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a metric's value for each method — plot_eval","title":"Plot a metric's value for each method — plot_eval","text":"evaluted metric scalar-valued, functions makes boxplot metric method.  metric vector-valued, function makes curve metric y-axis, one curve method (x-axis corresponding entry metric's vector). evals listofEvals, model plot.","code":""},{"path":"/reference/plot_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a metric's value for each method — plot_eval","text":"","code":"plot_eval(   object,   metric_name,   use_ggplot2 = TRUE,   main,   facet_mains,   ylab,   ylim,   include_zero = FALSE,   angle = 0,   ... )"},{"path":"/reference/plot_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a metric's value for each method — plot_eval","text":"object object class Simulation, Evals, listofEvals metric_name name metric plot use_ggplot2 whether use ggplot2 (requires installation ggplot2) main title plot. Default model_label evals single Evals. facet_mains used evals listofEvals length. Default model_label model. ylab y-axis label (default metric_label) ylim y-axis limits use (across plots) include_zero whether ylim include 0.  Ignored ylim passed explicitly angle angle labels (use_ggplot2 = FALSE) ... additional arguments pass boxplot (use_ggplot2 = FALSE).","code":""},{"path":[]},{"path":"/reference/plot_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a metric's value for each method — plot_eval","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method) %>%    evaluate(my_example_loss)    # then we could plot this    plot_eval(sim, \"myloss\") # \"myloss\" is my_example_loss@name  }"},{"path":"/reference/plot_eval_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a metric across multiple values of a model parameter — plot_eval_by","title":"Plot a metric across multiple values of a model parameter — plot_eval_by","text":"function used simulations generate_model called using vary_along parameter.  single (scalar) numeric parameter, single plot created x-axis parameter.  Eventually, function handle one two categorical variables (facets used) one categorical combined one continuous variable.","code":""},{"path":"/reference/plot_eval_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a metric across multiple values of a model parameter — plot_eval_by","text":"","code":"plot_eval_by(   sim,   metric_name,   varying,   type = c(\"aggregated\", \"raw\"),   center_aggregator = NULL,   spread_aggregator = NULL,   use_ggplot2 = TRUE,   main,   xlab,   ylab,   xlim,   ylim,   include_zero = FALSE,   legend_location = \"topright\",   method_col = seq(num_methods),   method_lty = rep(1, num_methods),   method_lwd = rep(1, num_methods),   method_pch = rep(1, num_methods),   ... )"},{"path":"/reference/plot_eval_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a metric across multiple values of a model parameter — plot_eval_by","text":"sim object class Simulation metric_name name metric plot (ignored custom aggregator provided) varying character vector giving name parameter varied across models evals. now, parameter must numeric multiple models value parameter. type \"aggregated\" shows line error bars (line represents center_aggregator error bars represent spread_aggregator; default sample mean estimated standard error); type \"raw\" shows raw data points (smoother overlayed) center_aggregator ignored type \"raw\".  NULL (default), sample mean aggregator used.  User can write specialized aggregators (see definition class Aggregator) necessary, example, evaluated metric scalar-valued. spread_aggregator ignored type \"raw\".  NULL (default), sample mean aggregator used.  User can write specialized aggregators (see definition class Aggregator) necessary, example, evaluated metric scalar-valued. Set spread_aggregator NA hide error bars. use_ggplot2 whether use ggplot2 (requires installation ggplot2) main title plot. xlab x-axis label (default varying) ylab y-axis label (default metric_label) xlim x-axis limits use ylim y-axis limits use include_zero whether ylim include 0.  Ignored ylim passed explicitly legend_location location legend.  Set NULL remove legend. method_col color use method method_lty line style use method method_lwd line thickness use method method_pch point style use method (default points, lines drawn) ... additional arguments pass plot (use_ggplot2 = FALSE).","code":""},{"path":"/reference/plot_eval_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a metric across multiple values of a model parameter — plot_eval_by","text":"type \"raw\", individual evals shown (one point per model-draw-method triplet) along loess smooth.  type \"aggregated\", center_aggregator spread_aggregator used.  center_aggregator used draw single line per method individual evals computed draw aggregated way.  default, mean_aggregator used, simply averages evals computed across draws.  spread_aggregator non-NULL, \"error bars\" drawn (half)widths computed using spread_aggregator.  default, se_aggregator used, gives estimate standard error sample mean. arguments method_col, method_lty, method_lwd, method_pch apply use_ggplot2 FALSE.","code":""},{"path":"/reference/plot_eval_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a metric across multiple values of a model parameter — plot_eval_by","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model,                   n = list(10, 20, 30),                   vary_along = \"n\") %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method) %>%    evaluate(my_example_loss)    # then we could plot this    plot_eval_by(sim, \"myloss\", varying = \"n\", include_zero = TRUE)  }"},{"path":"/reference/plot_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot one metric versus another for each method — plot_evals","title":"Plot one metric versus another for each method — plot_evals","text":"function used evaluated metrics vector-valued, curve plotted, parametrized two metrics.  plot single metric vector-valued, pass NULL metric_name_x. behaves similarly plot(runif(5)), x-axis variable simply 1:5. evals listofEvals, model plot.","code":""},{"path":"/reference/plot_evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot one metric versus another for each method — plot_evals","text":"","code":"plot_evals(   object,   metric_name_x,   metric_name_y,   use_ggplot2 = TRUE,   main,   facet_mains,   xlab,   ylab,   xlim,   ylim,   include_zero = FALSE,   legend_location = \"topright\",   method_col = seq(num_methods),   method_lty = rep(1, num_methods),   method_lwd = rep(1, num_methods),   method_pch = rep(NA, num_methods),   ... )"},{"path":"/reference/plot_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot one metric versus another for each method — plot_evals","text":"object object class Simulation, Evals, listofEvals metric_name_x name metric plot x axis (NULL) metric_name_y name metric plot y axis use_ggplot2 whether use ggplot2 (requires installation ggplot2) main title plot. Default model_label evals single Evals. facet_mains used evals listofEvals length. Default model_label model. xlab x-axis label (default metric_label_x) ylab y-axis label (default metric_label_y) xlim limits x-axis ylim limits y-axis include_zero whether ylim include 0.  Ignored ylim passed explicitly legend_location location legend.  Set NULL remove legend. method_col color use method method_lty line style use method method_lwd line thickness use method method_pch point style use method (default points, lines drawn) ... additional arguments pass boxplot (use_ggplot2 = FALSE).","code":""},{"path":"/reference/plus-ExtendedMethod-MethodExtension-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ExtendedMethod from an ExtendedMethod and MethodExtension — +,ExtendedMethod,MethodExtension-method","title":"Create an ExtendedMethod from an ExtendedMethod and MethodExtension — +,ExtendedMethod,MethodExtension-method","text":"Create ExtendedMethod ExtendedMethod MethodExtension","code":""},{"path":"/reference/plus-ExtendedMethod-MethodExtension-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ExtendedMethod from an ExtendedMethod and MethodExtension — +,ExtendedMethod,MethodExtension-method","text":"","code":"# S4 method for ExtendedMethod,MethodExtension +(e1, e2)"},{"path":"/reference/plus-ExtendedMethod-MethodExtension-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ExtendedMethod from an ExtendedMethod and MethodExtension — +,ExtendedMethod,MethodExtension-method","text":"e1 object class ExtendedMethod e2 object class MethodExtension","code":""},{"path":"/reference/plus-Method-MethodExtension-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an ExtendedMethod from a Method and MethodExtension — +,Method,MethodExtension-method","title":"Create an ExtendedMethod from a Method and MethodExtension — +,Method,MethodExtension-method","text":"Create ExtendedMethod Method MethodExtension","code":""},{"path":"/reference/plus-Method-MethodExtension-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an ExtendedMethod from a Method and MethodExtension — +,Method,MethodExtension-method","text":"","code":"# S4 method for Method,MethodExtension +(e1, e2)"},{"path":"/reference/plus-Method-MethodExtension-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an ExtendedMethod from a Method and MethodExtension — +,Method,MethodExtension-method","text":"e1 object class Method e2 object class MethodExtension","code":""},{"path":"/reference/plus-list-MethodExtension-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of ExtendedMethod from a list of Methods and a MethodExtension — +,list,MethodExtension-method","title":"Create a list of ExtendedMethod from a list of Methods and a MethodExtension — +,list,MethodExtension-method","text":"Create list ExtendedMethod list Methods MethodExtension","code":""},{"path":"/reference/plus-list-MethodExtension-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of ExtendedMethod from a list of Methods and a MethodExtension — +,list,MethodExtension-method","text":"","code":"# S4 method for list,MethodExtension +(e1, e2)"},{"path":"/reference/plus-list-MethodExtension-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of ExtendedMethod from a list of Methods and a MethodExtension — +,list,MethodExtension-method","text":"e1 list objects class Method class ExtendedMethod e2 object class MethodExtension","code":""},{"path":"/reference/recycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycles elements to create vector of desired length — recycle","title":"Recycles elements to create vector of desired length — recycle","text":"Recycles elements create vector desired length","code":""},{"path":"/reference/recycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycles elements to create vector of desired length — recycle","text":"","code":"recycle(x, length)"},{"path":"/reference/recycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycles elements to create vector of desired length — recycle","text":"x vector expanded proper length length desired length","code":""},{"path":"/reference/relabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Give simulation a new label — relabel","title":"Give simulation a new label — relabel","text":"Note save_simulation needs called change saved file.","code":""},{"path":"/reference/relabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give simulation a new label — relabel","text":"","code":"relabel(sim, label)"},{"path":"/reference/relabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give simulation a new label — relabel","text":"sim object class Simulation label longer, human readable label can characters spaces, hyphens, etc.","code":""},{"path":[]},{"path":"/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Give simulation a new name — rename","title":"Give simulation a new name — rename","text":"Note save_simulation needs called change saved file.","code":""},{"path":"/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give simulation a new name — rename","text":"","code":"rename(sim, name)"},{"path":"/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give simulation a new name — rename","text":"sim object class Simulation name short name identifier.  Must alphanumeric (can also - _ within","code":""},{"path":[]},{"path":"/reference/run_extendedmethod_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a single extended method on a single index of simulated data. — run_extendedmethod_single","title":"Run a single extended method on a single index of simulated data. — run_extendedmethod_single","text":"internal function.  Users call wrapper function. run_method. \"single\" refers single index-ExtendedMethod pair.","code":""},{"path":"/reference/run_extendedmethod_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a single extended method on a single index of simulated data. — run_extendedmethod_single","text":"","code":"run_extendedmethod_single(extmethod, model, draws, base_output_list)"},{"path":"/reference/run_extendedmethod_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a single extended method on a single index of simulated data. — run_extendedmethod_single","text":"extmethod ExtendedMethod object model Model object draws Draws object generated model base_output_list result loading Output object more_info = TRUE includes RNG endstate.","code":""},{"path":"/reference/run_extmethod_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Run one or more extended methods on simulated data. — run_extmethod_parallel","title":"Run one or more extended methods on simulated data. — run_extmethod_parallel","text":"internal function. Jobs run parallel method index.  Users call wrapper function run_method.","code":""},{"path":"/reference/run_extmethod_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run one or more extended methods on simulated data. — run_extmethod_parallel","text":"","code":"run_extmethod_parallel(   my_extmethods,   dir,   model_name,   index,   out_dir,   out_loc,   socket_names,   libraries,   save_locally = TRUE )"},{"path":"/reference/run_extmethod_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run one or more extended methods on simulated data. — run_extmethod_parallel","text":"my_extmethods list extended methods run parallel dir directory Model object saved (generate_model) model_name Model object's name attribute index vector positive integer indices.  Allows simulations carried chunks.  chunk gets separate RNG stream, meaning results identical whether run parallel sequentially. out_dir full directory method outputs stored. out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects. socket_names (quoting makePSOCKcluster) \"either character vector host names run worker copies R, positive integer (case number copies run localhost).\" libraries character vector R packages needed slaves. save_locally TRUE, files saved slaves.  FALSE, saved master.","code":""},{"path":"/reference/run_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Run one or more methods on simulated data. — run_method","title":"Run one or more methods on simulated data. — run_method","text":"Given Method object list Method objects, function runs method(s) draws passed object. output method saved file.","code":""},{"path":"/reference/run_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run one or more methods on simulated data. — run_method","text":"","code":"run_method(object, methods, out_loc = \"out\", parallel = NULL)"},{"path":"/reference/run_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run one or more methods on simulated data. — run_method","text":"object object class DrawsRef (list objects) returned link{simulate_from_model}. object Simulation, function applied  referenced draws simulation returns Simulation object references added new outputs created. methods list Method /ExtendedMethod objects single Method object ExtendedMethod out_loc (optional) length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects. parallel either NULL list containing socket_names (optionally) libraries save_locally (see Details information)","code":""},{"path":"/reference/run_method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run one or more methods on simulated data. — run_method","text":"function creates objects class Output saves file (dir/model_name/<out_loc>/r<index>_<method_name>.Rdata. parallel NULL, must list containing socket_names, can either positive integer specifying number copies run localhost else character vector machine names (e.g., \"mycluster-0-0\").  list parallel can also contain libraries, character vector R packages needed slaves save_locally, logical indicates whether files generated saved slaves (.e., locally) master. running method index , RNG state restored end calling simulate_from_model index. relevant randomized methods.  choice ensures one get identical results regardless order methods indices run .  ExtendedMethod objects passed, run Method objects run.  ExtendedMethod object depends output base method.  Furthermore, ExtendedMethod called, RNG state restored base method called.","code":""},{"path":[]},{"path":"/reference/run_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run one or more methods on simulated data. — run_method","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3)  # then we could add  sim <- run_method(sim, my_example_method)  }"},{"path":"/reference/run_method_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Run one or more methods on simulated data. — run_method_parallel","title":"Run one or more methods on simulated data. — run_method_parallel","text":"internal function. Jobs run parallel method index.  Users call wrapper function run_method.","code":""},{"path":"/reference/run_method_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run one or more methods on simulated data. — run_method_parallel","text":"","code":"run_method_parallel(   my_methods,   dir,   model_name,   index,   out_dir,   out_loc,   socket_names,   libraries,   save_locally = TRUE )"},{"path":"/reference/run_method_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run one or more methods on simulated data. — run_method_parallel","text":"my_methods list methods run parallel dir directory Model object saved (generate_model) model_name Model object's name attribute index vector positive integer indices.  Allows simulations carried chunks.  chunk gets separate RNG stream, meaning results identical whether run parallel sequentially. out_dir full directory method outputs stored. out_loc length-1 character vector gives location (relative model's path) method outputs stored.can useful staying organized multiple simulations based Model Draws objects. socket_names (quoting makePSOCKcluster \"either character vector host names run worker copies R, positive integer (case number copies run localhost).\" libraries character vector R packages needed slaves. save_locally TRUE, files saved slaves.  FALSE, saved master.","code":""},{"path":"/reference/run_method_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a single method on a single index of simulated data. — run_method_single","title":"Run a single method on a single index of simulated data. — run_method_single","text":"internal function.  Users call wrapper function. run_method. \"single\" refers single index-method pair.","code":""},{"path":"/reference/run_method_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a single method on a single index of simulated data. — run_method_single","text":"","code":"run_method_single(method, model, draws_list)"},{"path":"/reference/run_method_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a single method on a single index of simulated data. — run_method_single","text":"method Method object model Model object draws_list result loading Draws object more_info = TRUE includes RNG endstate.","code":""},{"path":"/reference/save_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a simulation object — save_simulation","title":"Save a simulation object — save_simulation","text":"Saves object class Simulation sim@dir/files/sim@name.Rdata. Note: \"files\" default, name directory getOption(\"simulator.files\"), value getOption(\"simulator.files\") model created.","code":""},{"path":"/reference/save_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a simulation object — save_simulation","text":"","code":"save_simulation(sim)"},{"path":"/reference/save_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a simulation object — save_simulation","text":"sim object class Simulation","code":""},{"path":"/reference/save_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a simulation object — save_simulation","text":"function overwrites pre-existing file location without apology.","code":""},{"path":[]},{"path":"/reference/simulate_from_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a model. — simulate_from_model","title":"Simulate from a model. — simulate_from_model","text":"Given reference Model object, function calls model's simulate function params.  repeats nsim times.  example, simulating regression fixed design, function generate nsim response vectors y.","code":""},{"path":"/reference/simulate_from_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a model. — simulate_from_model","text":"","code":"simulate_from_model(object, nsim, index = 1, parallel = NULL)"},{"path":"/reference/simulate_from_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a model. — simulate_from_model","text":"object object class ModelRef returned link{generate_model}. list objects. object Simulation, function applied referenced models simulation returns Simulation object references added new draws created. nsim number simulations conducted.  scalar, value repeated index.  Otherwise can vector length length(index) index vector positive integer indices.  Allows simulations carried chunks.  chunk gets separate RNG stream, meaning results identical whether run parallel sequentially. parallel either NULL list containing socket_names (optionally) libraries save_locally (see Details information)","code":""},{"path":"/reference/simulate_from_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from a model. — simulate_from_model","text":"function creates objects class Draws saves file (dir/files/model_name/r<index>.Rdata). Note: \"files\" default, name directory getOption(\"simulator.files\"), value getOption(\"simulator.files\") model created. parallel NULL, must list containing socket_names, can either positive integer specifying number copies run localhost else character vector machine names (e.g., \"mycluster-0-0\").  list parallel can also contain libraries, character vector R packages needed slaves save_locally, logical indicates whether files generated saved slaves (.e., locally) master.","code":""},{"path":[]},{"path":"/reference/simulate_from_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from a model. — simulate_from_model","text":"","code":"if (FALSE) {  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model, n = 20) %>%    simulate_from_model(nsim = 50, index = 1:3,      parallel = list(socket_names = 3))  }"},{"path":"/reference/simulate_from_model_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a model. — simulate_from_model_single","title":"Simulate from a model. — simulate_from_model_single","text":"internal function.  Users call wrapper function simulate_from_model.","code":""},{"path":"/reference/simulate_from_model_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a model. — simulate_from_model_single","text":"","code":"simulate_from_model_single(model, nsim, index, seed)"},{"path":"/reference/simulate_from_model_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a model. — simulate_from_model_single","text":"model Model object nsim number simulations conducted. index positive integer index. seed 7 digit seed used L'Ecuyer RNG","code":""},{"path":"/reference/simulate_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a model in parallel. — simulate_parallel","title":"Simulate from a model in parallel. — simulate_parallel","text":"internal function. Draws done chunks labeled indices size determined nsim. Users call wrapper function simulate_from_model.","code":""},{"path":"/reference/simulate_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a model in parallel. — simulate_parallel","text":"","code":"simulate_parallel(   model_ref,   nsim,   index,   seeds,   socket_names,   libraries,   save_locally = TRUE )"},{"path":"/reference/simulate_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a model in parallel. — simulate_parallel","text":"model_ref object class ModelRef nsim number simulations conducted chunk.  Vector length index index vector positive integer indices.  Allows simulations carried chunks.  chunk gets separate RNG stream, meaning results identical whether run parallel sequentially. seeds list length(index) L'Ecuyer-CMRG seed vectors. separate stream.  particular, starting seed used generate model object, seeds[] result calling nextRNGStream index[] times. socket_names (quoting makePSOCKcluster \"either character vector host names run worker copies R, positive integer (case number copies run localhost).\" libraries character vector R packages needed slaves. save_locally TRUE, files saved slaves.  FALSE, saved master.","code":""},{"path":"/reference/subset_evals.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce an Evals object to a subset of methods and/or metrics — subset_evals","title":"Reduce an Evals object to a subset of methods and/or metrics — subset_evals","text":"method_names NULL, subsetting done methods.  Likewise metric_names.","code":""},{"path":"/reference/subset_evals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce an Evals object to a subset of methods and/or metrics — subset_evals","text":"","code":"subset_evals(evals, method_names = NULL, metric_names = NULL)"},{"path":"/reference/subset_evals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce an Evals object to a subset of methods and/or metrics — subset_evals","text":"evals object class Evals listofEvals. method_names character vector method names metric_names character vector metric names","code":""},{"path":"/reference/subset_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Models — subset_models","title":"Subset Models — subset_models","text":"Given list Model objects, returns model names meet conditions.  Uses subset","code":""},{"path":"/reference/subset_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Models — subset_models","text":"","code":"subset_models(m, ...)"},{"path":"/reference/subset_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Models — subset_models","text":"m list Model objects ... logical expression involving parameters Models.  now, can parameters length 1 either class numeric character","code":""},{"path":"/reference/subset_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simulation that is a subset of a preexisting simulation object — subset_simulation","title":"Create a simulation that is a subset of a preexisting simulation object — subset_simulation","text":"Given simulation, creates new simulation subset preexisting simulation.  save new one file.  , first change name (, potentially, label) simulation use save_simulation.  call save_simulation changing name, overwrite preexisting simulation.  Use rename relabel.","code":""},{"path":"/reference/subset_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simulation that is a subset of a preexisting simulation object — subset_simulation","text":"","code":"subset_simulation(sim, ..., subset = NULL, index, methods)"},{"path":"/reference/subset_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a simulation that is a subset of a preexisting simulation object — subset_simulation","text":"sim simulation object ... logical conditions specify subset models.  Conditions can involve params model length 1 class numeric character. subset vector integers indexing models vector model names. select models based parameter values, use .... However, using ... slower using subset. index vector positive integers specifying draws' objects desired. missing, draws' evals returned. methods character vector method names interest.  missing, methods' evals returned","code":""},{"path":"/reference/tabulate_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a table of a metric for each pair of models and methods — tabulate_eval","title":"Make a table of a metric for each pair of models and methods — tabulate_eval","text":"row table corresponds different model column different method.  metric must scalar.  way standard error shown (shown) controlled se_format.","code":""},{"path":"/reference/tabulate_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a table of a metric for each pair of models and methods — tabulate_eval","text":"","code":"tabulate_eval(   object,   metric_name,   method_names = NULL,   caption = NULL,   center_aggregator = NULL,   spread_aggregator = NULL,   se_format = c(\"Paren\", \"PlusMinus\", \"None\"),   output_type = \"latex\",   format_args = list(nsmall = 0, digits = NULL, scientific = FALSE),   na_string = \"--\",   bold = c(\"None\", \"Smallest\", \"Largest\") )"},{"path":"/reference/tabulate_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a table of a metric for each pair of models and methods — tabulate_eval","text":"object object class Simulation, Evals, listofEvals. evals object just differ model_name. metric_name name metric tabulate.  Must scalar valued. method_names character vector indicating methods include table. NULL, include methods found object's evals. caption caption plot. NULL, default caption used; FALSE caption (returns tabular without table). center_aggregator NULL (default), sample mean aggregator used.  User can write specialized aggregators (see definition class Aggregator) necessary, example, evaluated metric scalar-valued. spread_aggregator NULL (default), standard error  sample mean used.  User can write specialized aggregators (see definition class Aggregator) necessary, example, evaluated metric scalar-valued. Set spread_aggregator NA hide error bars. se_format format standard error output_type see kable's argument format options. Default \"latex\" options include \"html\" \"markdown\" format_args arguments pass function format na_string write table place NA bold puts bold value smallest/largest model","code":""},{"path":"/reference/tabulate_eval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a table of a metric for each pair of models and methods — tabulate_eval","text":"Uses knitr's function kable put table various formats, including latex, html, markdown, etc.","code":""},{"path":"/reference/tabulate_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a table of a metric for each pair of models and methods — tabulate_eval","text":"","code":"if (FALSE) {  # suppose previously we had run the following:  sim <- new_simulation(name = \"normal-example\",                        label = \"Normal Mean Estimation\",                        dir = tempdir()) %>%    generate_model(make_my_example_model,                   n = list(10, 20, 30),                   vary_along = \"n\") %>%    simulate_from_model(nsim = 50, index = 1:3) %>%    run_method(my_example_method) %>%    evaluate(my_example_loss)    # then we could plot this    tabulate_eval(sim, \"myloss\")  }"}]
